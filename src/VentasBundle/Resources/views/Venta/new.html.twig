{% extends "AppBundle::layout.html.twig" %}
{% block pageheader %}
<style type="text/css">
    #form-punto-venta label{
        font-weight: bold;
        padding: 0px 2px 0px 8px;
    }
    .vtafields label{
        display: inline-block;
        width:100%;
    }        
    #form-punto-venta select:focus, #form-punto-venta input:focus,#form-punto-venta button:focus,#form-punto-venta a:focus, #form-punto-venta .select2-container *:focus{
    color: #666666;
    background-color: gainsboro;
    }
    a.btn_search{
        margin:0;
    }
    .divnotif{
        padding: 0 10px;
    }

    .venta.stdtable.noaction tbody tr.item td{
        padding: 4px 10px;
    }

    #clientes_table .nombre-cliente:focus, #clientes_table .nombre-cliente:hover, 
    #formapago_table .nombre-formapago:focus , #formapago_table .nombre-formapago:hover,
    #productos_table .nombre-producto:focus, #productos_table .nombre-producto:hover,
    .paginate_button:focus{
        color:red !important;
        font-weight:bold;
    }

    .resumen th{
        font-size:12px;
        width:30%;
    }
    .resumen th.gralTotalTd{
        font-size:14px;
    }

</style>
<div class="pageheader notab">
<script src="https://unpkg.com/tabbable/dist/index.umd.js"></script>
  <script src="https://unpkg.com/focus-trap/dist/focus-trap.umd.js"></script>
    {% set idpto = app.session.get('puntoVentaActual')['id'] %}
    <h1 class="pagetitle">Punto de Venta: 
        <select id="selectPuntoVentaActual" style="width:20%;" tabindex="-1" class="select2">
            <option value="0" {% if idpto == 0 %} selected="selected" {% endif %}>Seleccionar</option>
            {% for i in puntosVenta %}
                <option value="{{i.id}}" {% if i.id == idpto %} selected="selected" {% endif %}>{{i.nombre}}</option>
            {% endfor %}
        </select>
        <span style="margin-left:20px" class="nroOperacion">#{{entity.nroOperacion}}</span>
        <span style="font-size:20px" class="floatright fechahora">{{entity.fechaVenta|date('d/m/Y H:i')}} | {{app.user.username}}</span>
    </h1>
</div><!--pageheader-->
{% endblock %}
{% block contentwrapper %}
<div id="control"> </div>
<div id="contentwrapper" class="contentwrapper">
{% include "AppBundle::notificacion.html.twig" %}    
    <div  id="form-punto-venta" {% if app.session.get('puntoVentaActual')['id'] == 0 %} style="display:none" {% endif %}>

        {{ form_start(form, {'attr': {'class': 'form-horizontal','id':'ventasbundle_venta'}}) }}     

        <fieldset class="vtafields" >                                        
            <div id="selectorCliente" style="display:inline-block; width: 50%;">                                 
                {{ form_label(form.cliente) }}
                {{ form_widget(form.cliente,{'attr':{'style':'width:80%','url':path('get_lista_clientes'), 'fnc':'openModalCliente', 'mtitle':'Seleccionar Cliente'}}) }}    
                <a href="javascript:void(0)" class="btn btnaction btn_search"></a>      
            </div>
            <div style="display:inline-block; width: 20%;"> 
                {{ form_label(form.precioLista)}}
                {{ form_widget(form.precioLista,{'attr':{'style':'width:100%','tabindex':-1}}) }}
            </div> 
            <div style="display:inline-block; width: 25%;"> 
                {{ form_label(form.transporte)}}
                {{ form_widget(form.transporte,{'attr':{'style':'width:100%','tabindex':-1}}) }}
            </div>                                 
        </fieldset> 
        <fieldset >        
            <div class="datos-cliente" style="display:inline-block; width:100%; vertical-align: top;margin-bottom:10px">  
                {% include "VentasBundle:Venta:_partial-datos-cliente.html.twig" with {'item':entity.cliente} %}   
            </div>                                                                                             
        </fieldset>

        <fieldset class="vtafields" >                                                    
            <div style="display:inline-block; width: 35%; "> 
                {{ form_label(form.formaPago)}}
                {{ form_widget(form.formaPago,{'attr':{'style':'width:80%','url':path('get_lista_formapago'), 'fnc':'openModalFormaPago', 'mtitle':'Seleccionar Forma de Pago'}}) }}
                <a href="javascript:void(0)" class="btn btnaction btn_search"></a>
            </div>
            <div style="display:inline-block; width: 20%;"> 
                {{ form_label(form.moneda)}}
                {{ form_widget(form.moneda,{'attr':{'style':'width:100%'}}) }}
            </div>
            <div style="display:inline-block; width: 25%;"> 
                {{ form_label(form.deposito)}}
                {{ form_widget(form.deposito,{'attr':{'style':'width:100%','tabindex':-1}}) }}
            </div>   
        </fieldset> 

        <fieldset >                    
            <div class="datos-formapago" style="display:inline-block; width: 35%; vertical-align: top;">  
                {% include "VentasBundle:Venta:_partial-datos-formapago.html.twig" with {'item':entity.formaPago}  %}   
            </div>                                                                                   
            <div class="datos-moneda" style="display:inline-block; width: 25%; vertical-align: top;">  
                {% include "VentasBundle:Venta:_partial-datos-moneda.html.twig" with {'item':entity.moneda}  %}   
            </div>                                                                                   
        </fieldset>

        <fieldset>
            <div style="padding-top: 20px; margin:auto; width: 100%;">                
                {{ form_errors(form.detalles) }}
                {% include "VentasBundle:Venta:_partial-detalle.html.twig" %}      
            </div>
        </fieldset>
        <fieldset>
            <div style="margin:auto; width: 100%;">                                
                {% include "VentasBundle:Venta:_partial-resumen.html.twig" %}      
            </div>
        </fieldset>

        <fieldset>          
            <br clear="all" /> 
            <div class="actionbutton">
                <button class="guardar tabbable" type="submit" >Guardar</button>
                <a class="cancelar tabbable" type="button" href="{{ path('ventas')}}">Cancelar</a>
            </div>
        </fieldset>
        
        <div name="rest" class="hiddenformrest"> {{ form_rest(form) }} </div>
        {{ form_end(form) }}

    </div> 
    <div class="notifmsg info png_bg" style="margin-top:10px">
        <a href="#" class="close"></a>
        <div><small>Ctrl+Enter = Abrir búsqueda <strong class="divnotif">|</strong> Ctrl+Alt+C = Buscar Cliente <strong class="divnotif">|</strong> Ctrl+Alt+F = Buscar Forma de Pago <strong class="divnotif">|</strong> + = Agregar producto </small></div>
    </div> 
</div>
{% endblock %}
{% block extra_javascripts %}
{% include "AppBundle::block-list-js.html.twig" %}
<script type="text/javascript" src="{{ asset('assets/js/plugins/chosen.jquery.min.js') }}"></script>

<script type="text/javascript">
jQuery(function ($) {
    $(window).on('load', function () {
        $('.cancelar').on('blur', function(e){ 
            $('#selectPuntoVentaActual').select2('focus')
            e.stopPropagation();
        })
        $(document).on('keydown',function(e){ detectarControles(e); })

       // $('.togglemenu').click();    
        $('.select2').select2({ width:'style' });
        $('#ventasbundle_venta_cliente').focus();

        // si no hay punto de venta en sesion se debe indicar antes de continuar
        {% if app.session.get('puntoVentaActual')['id'] ==0 %} 
            alert('Debe seleccionar un punto de venta para continuar!!');
            $('#selectPuntoVentaActual').select2('open');
        {% endif %}
        // Al modificar punto de venta cambiar datos en sesión.
        $('#selectPuntoVentaActual').on('change', function() {
            pto = $(this).val();
            $.getJSON("{{ path('ventas_set_puntosventa')}}" , 
                {'puntoVenta':pto}).done(function(data){
                // validar que se haya definido uno para continuar
                if( data == null ){
                    alert('Debe seleccionar un punto de venta para continuar!!');
                    $('#form-punto-venta').hide();
                    $('.nroOperacion').hide();
                }else{                    
                    $('#ventasbundle_venta_nroOperacion').val(data);    
                    $('.nroOperacion').html( '#'+data);
                    $('.nroOperacion').show();
                    $('#form-punto-venta').show();
                }
            });
        });
        // al presionar ctrl+enter abrir popup 
        $(document).on('click change keydown',
            '#ventasbundle_venta_cliente,#ventasbundle_venta_formaPago,[name*="producto"]', function(e) {
            if (e.keyCode == 13 && e.ctrlKey ) {    
                e.preventDefault();
                openModal($(this))
            }
        });
        // en buscar abrir popup correspondiente
        $(document).on('click','.btn_search',function(e) {
            obj = $(this).parent().find('select');
            e.preventDefault();
            openModal(obj)           
        })

        // al modificar forma de pago actualizar datos del partial
        $('#ventasbundle_venta_formaPago').on('change', function() {
            $('.datos-formapago').html('');
            id = $(this).val();            
            $.get( "{{ path('get_datos_formapago')}}" , {'id': id}).done(function(data){
                // actualizar datos
                if(data){                    
                    $('.datos-formapago').html(data);
                    $('.porcentajeRecargo').text( $('#porcentajeRecargo').val() )
                    actualizaTotales();
                }
            });
        });
        // al modificar moneda actualizar datos del partial
        $('#ventasbundle_venta_moneda').on('change', function() {
            $('.datos-moneda').html('');
            id = $(this).val();            
            $.get( "{{ path('get_datos_moneda')}}" , {'id': id}).done(function(data){
                // actualizar datos
                if(data){                    
                    $('.datos-moneda').html(data);
                    $('.simbolo').html($('#simbolo').val()); 
                    actualizaTotales();
                }
            });
        });
        // al modificar forma de pago actualizar datos del partial
        $('#ventasbundle_venta_cliente').on('change', function() {
            $('.datos-cliente').html('');
            id = $(this).val();            
            $.getJSON( "{{ path('get_datos_venta_cliente')}}" , {'id': id}).done(function(data){
                // actualizar datos
                if(data){                    
                    $('.datos-cliente').html(data.partial);
                    $('#ventasbundle_venta_precioLista').val(data.listaprecio);
                    $('#ventasbundle_venta_transporte').val(data.transporte);
                    $('#ventasbundle_venta_formaPago').val(data.formapago);
                    $('#ventasbundle_venta_formaPago').change();
                }
            });

        });

// Get the container who holds the collection
    $collectionHolder = $('table.venta tbody');
    $collectionHolder.find('.delTd').each(function() {
        addItemFormDeleteLink($(this));
    });
    $collectionHolder.find('.ordTd').each(function(i) {
        $(this).html(i + 1);
    });  
    $('#linkAdd').on('click', function(e) {        
        e.preventDefault();    
        addNewItem();
        e.stopPropagation();
        $collectionHolder.find('.chzn-container').last().trigger('mousedown');          
    });
    
    // confirm on submit
    $('#ventasbundle_venta').on('submit', function(){
        // controlar que haya items cargados 
        let txt = $('#selectPuntoVentaActual option:selected').text()+' #'+$('#ventasbundle_venta_nroOperacion').val();
        txt = txt + '\n\n' + 'CONFIRMA REGISTRAR LA VENTA?' + '\n' +'Se realizará el descuento de los productos en el stock?';
        if( $('tbody tr.item').length > 0 ){
            if (!confirm(txt)) {
               return false;
            }                                   
        }else{  alert('Debe ingresar items a la venta'); return false;}

    })
});
// funciones personalizas para el formulario
 function addNewItem() {
    var prototype = $collectionHolder.data('prototype');
    var index = $collectionHolder.data('index');
    var newForm = prototype.replace(/items/g, index);
    $collectionHolder.append(newForm);
    $collectionHolder.data('index', index + 1);
    addItemFormDeleteLink($collectionHolder.find('.delTd').last());
    $collectionHolder.find('.ordTd').last().html($collectionHolder.data('index'));
    $collectionHolder.find('.cantTd input').last().val(1);

    $('input').on('focus',function(){ $(this).select(); });
    $('.cantTd input, .precTd input[type=text]').change(function(){ 
        if(isNaN( parseFloat($(this).val()) )) $(this).val(0);  actualizaTotales(); 
    });

    // abrir modal de producto en select
    const newProd = $collectionHolder.find('[name*="producto"]').last();
    openModal(newProd);  
}    
function addItemFormDeleteLink($itemFormTd) {
    var $removeFormA = jQuery('<a href="#" title="Quitar"><span class="minus"></span></a>');
    $itemFormTd.append($removeFormA);
    $removeFormA.on('click', function(e) {
        var res = true;
        if ($itemFormTd.parent().find(".cantTd input").val() > 0)
            res = confirm('Desea eliminar este item?');
        if (res) {
            e.preventDefault();
            $itemFormTd.parent().remove();
            actualizaTotales();
        }
    });
}
function actualizaTotales(){
    let Total=0;
    const cotizacion = parseFloat($('#cotizacion').val()) ;
    $("tr.item").each(function(){
        let item = $(this);
        const cant =  checknumero( item.find('.cantTd input') ) ;
        checknumero( item.find('.precTd input[type=text]') ) ;
        let prec = item.find('.precTd input[type=text]').data('precio'); 

        // calcular la cotización si es distinta a 1        
        prec = prec * cotizacion;
        item.find('.precTd input[type=text]').val( prec.toFixed(3) );
                
        let sbtotItm = prec * cant;                
        Total += sbtotItm;                
        item.find('.itmSubtotalTd').text( sbtotItm.toFixed(3));                
    });
    $('#subtotalTh').html(Total.toFixed(3));
    $('#gralSubtotalTd').find('span.valor').html(Total.toFixed(3));
    // porcentaje de descuento/recargo   
    const porcentaje = checknumero( $('#porcentajeRecargo') ) ;
    const descrec = Total * (porcentaje/100);
    const totalgral = Total + descrec;
    $('#importeRecargo').text(descrec.toFixed(3));
    $('#totalGral').text(totalgral.toFixed(3));

    $collectionHolder.find('.ordTd').each(function(index) {
        $(this).html(index+1);
    }); 
}
function openModal(obj){
    const url = obj.attr('url');
    const fnc = obj.attr('fnc')+'(obj)';
    const title = obj.attr('mtitle');
    $('#popup')
        .html('<div class="loaders" style="width: 100%;text-align: center;margin-top: 10px;"><img src="{{asset('assets/images/loaders/loader1.gif')}}" alt="" /></div>')
        .load( url , function(){      
            eval( fnc ) 
         })        
        .dialog({
            modal: true, autoOpen: true, title: title, width: '40%', minHeight: 400,            
            close: function() { 
                // volver focus al control
                $(obj).focus(); 
             },            
        }); 
}

// CLIENTES
function openModalCliente(){
    var oTable = $('#clientes_table').dataTable({
                "columnDefs": [        
                    // These are the column name variables that will be sent to the server
                    { "name": "nombre", "targets": 0 },
                    { "name": "cuit",  "targets": 1 },                    
                    { "targets"  : 'nosort', "orderable": false }        
                ],
                "rowCallback": function (row, data) {                             
                    // seleccionar on click               
                    $(row).find('a').on('click', function(){
                        optCliente = $('#ventasbundle_venta_cliente option:first');
                        optCliente.val($(this).data('id'));
                        optCliente.text($(this).text());                          
                        $('#popup').dialog("destroy");        
                        $('#ventasbundle_venta_cliente').change();
                        $('#ventasbundle_venta_cliente').focus();                                     
                    })
                 },
                // Server-side parameters
                "processing": true,
                "serverSide": true,
                // Ajax call
                "ajax": {
                    "url": "{{ path('cliente_list_datatables') }}",
                    "type": "POST"
                },
                // Classic DataTables parameters
                "bPaginate" : true,
                "bInfo" : true, 
                "bSearchable": true,        
                "bLengthChange": true,
                "pageLength":10,
                "order": [[0, 'asc']],
                "sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
                    "sProcessing": "Cargando...",
                    "sLengthMenu": "Mostrar _MENU_ registros ",
                    "sZeroRecords": "Sin datos",
                    "sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
                    "sInfoEmpty": "Sin coincidencias",
                    "sInfoFiltered": "(filtrado de _MAX_ registros)",
                    "sSearch": "Buscar:"
                }
            }); 
     // focus en buscar    
    $('#clientes_table_filter input').focus();
}

// FORMAS DE PAGO
function openModalFormaPago(){
    var fTable= $('#formapago_table').dataTable({
                "bAutoWidth": false,
                "bRetrieve" : true,
                "columnDefs": [ {
                    "targets"  : 'nosort',
                    "orderable": false
                  }],
                "rowCallback": function (row, data) {                             
                    // seleccionar on click               
                    $(row).find('a').on('click', function(){
                        $('#ventasbundle_venta_formaPago').val($(this).data('id'));                                                
                        $('#popup').dialog("destroy");
                        $('#ventasbundle_venta_formaPago').change();        
                        $('#ventasbundle_venta_formaPago').focus();                  
                    })
                 },
		"sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
			"sLengthMenu": "Mostrar _MENU_ registros ",
			"sZeroRecords": "Sin datos",
			"sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
			"sInfoEmpty": "Sin coincidencias",
			"sInfoFiltered": "(filtrado de _MAX_ registros)",
                        "sSearch": "Buscar:",
                        "sSelect": "%d seleccionados"
		}
	});
     // focus en buscar    
    $('#formapago_table_filter input').focus();
}
// PRODUCTOS
function openModalProducto(obj){
    const listaprecio = $('#ventasbundle_venta_precioLista').val();
    const deposito = $('#ventasbundle_venta_deposito').val();
    const cotizacion = $('#cotizacion').val();
    var oTable = $('#productos_table').dataTable({
                "columnDefs": [        
                    // These are the column name variables that will be sent to the server
                    { "name": "nombre", "targets": 0 },
                    { "name": "codigo",  "targets": 1 },                    
                    { "name": "precio",  "targets": 2 },                    
                    { "name": "stock",  "targets": 3 },                    
                    { "targets"  : 'nosort', "orderable": false }        
                ],
                "rowCallback": function (row, data) {                             
                    // registrar seleccion           
                    $(row).find('td:nth-child(3n),td:nth-child(4n)').addClass('alignright');
                    $(row).find('a').on('click', function(e){
                        e.preventDefault();
                        // cargar option
                        opt = obj.find('option:first');  
                        opt.val($(this).data('id'));
                        opt.text($(this).text());  
                        // cargar precio
                        objprecio = obj.parent().siblings('.precTd').find('input');
                        objprecio.val( $(this).data('precio') );
                        objprecio.data('precio',$(this).data('precio') );
                        
                        actualizaTotales();                        
                        $('#popup').dialog("destroy");        
                        obj.focus();                 
                    })
                 },
                // Server-side parameters
                "processing": true,
                "serverSide": true,
                // Ajax call
                "ajax": {
                    "url": "{{ path('producto_list_datatables') }}",
                    "type": "POST",
                    "data" : { 'listaprecio' : listaprecio, 
                                'deposito' : deposito,
                                'cotizacion' : cotizacion 
                            },    
                },
                // Classic DataTables parameters
                "bPaginate" : true,
                "bInfo" : true, 
                "bSearchable": true,        
                "bLengthChange": true,
                "pageLength":10,
                "order": [[0, 'asc']],
                "sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
                    "sProcessing": "Cargando...",
                    "sLengthMenu": "Mostrar _MENU_ registros ",
                    "sZeroRecords": "Sin datos",
                    "sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
                    "sInfoEmpty": "Sin coincidencias",
                    "sInfoFiltered": "(filtrado de _MAX_ registros)",
                    "sSearch": "Buscar:"
                }
            }); 
    // cambiar simbolo en columna precio
    oTable.find('.simbolo').text( $('#simbolo').val() );    
     // focus en buscar    
    $('#productos_table_filter input').focus();
}

function detectarControles(e) {
    if( e.ctrlKey && e.altKey ){
        // ctrl + alt + C
        if( e.keyCode == 67 ){
            e.preventDefault();
            openModal($('#ventasbundle_venta_cliente'))
        }
        // ctrl + alt + J
        if( e.keyCode == 70 ){
            e.preventDefault();
            openModal($('#ventasbundle_venta_formapago'))
        }        
    }     
    // tecla + agrega item
    if (e.keyCode == 171) { 
        e.preventDefault();
        $('#linkAdd').click();
    }
}
});
</script>{% endblock %}