{% extends "AppBundle::layout.html.twig" %}
{% block pageheader %}

{% block extra_css %}
<link rel="stylesheet" href="{{ asset('assets/css/style.ventas.css') }}" type="text/css" media="all" />
{% endblock %}

<div class="pageheader notab">
    <h1 class="pagetitle">Notas de Débito y Crédito
        <span class="floatright fechahora">
            {{entity.fecha|date('d/m/Y')}}
            <span class="js-hora"> {{entity.fecha|date('H:i:s')}}</span> &nbsp; | &nbsp; {{app.user.username}}
        </span>
    </h1>
</div><!--pageheader-->
{% endblock %}

{% block contentwrapper %}
<div id="contentwrapper" class="contentwrapper">
{% include "AppBundle::notificacion.html.twig" %}
    <div id="updating-data" class="warning hidden" style="text-align:center">
        Actualizando datos del cliente... aguarde por favor
    </div>
<div class="divForm">
   {{ form_start(form, {'attr': {'class': 'form-horizontal','id':'ventasbundle_notadebcred'}}) }}

    <fieldset class="fields" >
        {% include "VentasBundle:Partial:block-select-cliente.html.twig" with {'cliente':entity.cliente} %}

        <div class="datos-moneda" data-cotizacion="{{entity.moneda.cotizacion}}" data-simbolo="{{entity.moneda.simbolo}}">

            {% include "VentasBundle:Partial:block-select-moneda.html.twig" %}
        </div>

        {% include "ConfigBundle:FormaPago:widget_select_formapago.html.twig"
              with {'formaPago':entity.formapago, 'consumidorFinal':entity.cliente.consumidorFinal } %}

    </fieldset>
    <fieldset>

        {% include "VentasBundle:Partial:_partial-datos-cliente.html.twig" with {'item':entity.cliente, 'detallado': entity} %}

        {% include "VentasBundle:Partial:_partial-datos-formapago.html.twig" with {'item':entity.formaPago}  %}

    </fieldset>

    <fieldset class="fields" >
        <div style="display:inline-block; width: 40%">
            {% include "VentasBundle:NotaDebCred:block-select-comprobanteasociado.html.twig" %}
        </div>
        <div style="display:inline-block; width: 25%;">
            {{ form_row(form.tipoComprobante) }}
        </div>
        <div style="display:inline-block; width: 10%;">
            {{ form_row(form.periodoAsocDesde, { 'attr': {'class' : 'datepicker'} }) }}
        </div>
        <div style="display:inline-block; width: 10%;">
            {{ form_row(form.periodoAsocHasta, { 'attr': {'class' : 'datepicker'} }) }}
        </div>
        <div style="display:inline-block; width: 5%;">
            <button type="button" class="stdbtn btn_default" onclick="setPeriodoAsociado()">Hoy</button>
        </div>
    </fieldset>
    <fieldset class="fields" style="margin-top:10px">
        <div style="display:inline-block; width:30%;">
            {{ form_row(form.precioLista) }}
        </div>
        <div style="display:inline-block; width:65%;">
            {{ form_row(form.concepto) }}
        </div>
    </fieldset>

    <fieldset>
        <div style="padding-top: 20px; margin:auto; width: 100%;">
            <div style="text-align:center; color:orangered; font-size:12px;" class="divcarga hidden" >Cargando items de comprobante asociado... Aguarde por favor</div>
            {{ form_errors(form.detalles) }}
            {% include "VentasBundle:Partial:_partial-detalle.html.twig" %}
        </div>
    </fieldset>

    <fieldset>
        <div style="margin:auto; width: 100%;">
            {% include "VentasBundle:Partial:_partial-resumen.html.twig" with {'showiva': false, 'showiibb': false } %}
        </div>
    </fieldset>

    {% include "VentasBundle:CobroVenta:_partial-detalle-pago.html.twig" with { 'cobroDetalles': form.cobroDetalles } %}

    <fieldset>
        <br clear="all" />
        <div style="text-align: center;" id="divEmitirTicket">
          <label> EMITIR TICKET</label>
          <input type="checkbox" name="emitirTicket" id="emitirTicket"/>
        </div>
        <div class="actionbutton">
            <button class="guardar" id="guardar" type="button" 
                    data-urlemitir="{{ path('ventas_factura_emitir') }}" 
                    data-urlticket="{{ path('ventas_factura_getticket')}}">
              <span>Guardar</span> <img class="loader_facturar hidden" src={{ asset('assets/images/loaders/loader8.gif') }} >
            </button>
            <a class="cancelar" onclick="return confirm('Confirma cancelar?')" type="button" href="{{ path('ventas_notadebcred')}}">Cancelar</a>
        </div>
    </fieldset>

    {% include "VentasBundle:Partial:_partial-notifmsg.html.twig" with {'shortcuts': ['cliente', 'formapago', '+pago', '+producto'] } %}

    <input type="hidden" id="ventasbundle_notadebcred_id" name="ventasbundle_notadebcred_id" value="{{entity.id}}"/>
    <div name="rest" class="hiddenformrest">{{ form_rest(form) }}</div>
  {{ form_end(form) }}
</div>
</div>

{% include "VentasBundle:CobroVenta:_partial-dialog-tipopago.html.twig" %}

{% endblock %}
{% block extra_javascripts %}
{% include "AppBundle::block-list-js.html.twig" %}
<script type="text/javascript" src="{{ asset('assets/js/utils/widgetFormapago.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/utils/widgetCliente.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/utils/notaDebCred.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/utils/moduloVentas.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/utils/detallePago.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/plugins/jquery.inputmask.js') }}"></script>
<script type="text/javascript" src="{{ asset('assets/js/custom/ifu.js') }}"></script>
<script type="text/javascript">
jQuery(function ($) {
    $(window).on('load', function () {

      // fecha desde y hasta
      $('.datepicker').datepicker({
        dateFormat: 'dd-mm-yy',
        onClose: function( selectedDate )
          {
            let desde = $('#ventasbundle_notadebcred_periodoAsocDesde').datepicker( "getDate" )
            let hasta = $('#ventasbundle_notadebcred_periodoAsocHasta').datepicker( "getDate" )
            if( desde && hasta && desde > hasta){
              alert('Controlar el rango de fechas, la fecha desde debe ser menor a la fecha hasta!')
              $('#ventasbundle_notadebcred_periodoAsocHasta').val('')
            }
          }
      });
      $('#ventasbundle_notadebcred_tipoComprobante').width('90%')
      // datos del cliente cuando es consumidor final
      {% if entity.cliente.consumidorFinal %}

        var nrodoc = $("#ventasbundle_nroDocumentoCliente")
        $("#ventasbundle_tipoDocumentoCliente").select2({
          ajax: {
            url: $("#ventasbundle_tipoDocumentoCliente").attr("url_select"),
            type: "post",
            dataType: "json",
            data: (params) => {
              return {
                searchTerm: params.term,
                slug: "tipo-documento"
              }
            },
            processResults: (response) => {
              return { results : response }
            },
            cache: true
          },
          placeholder: "Seleccionar...",
          allowClear: true,
          width:'style',
        }).on("select2:select", function(e){
          nrodoc.attr("required", true )
          nrodoc.focus()
        }).on("select2:unselect", function(){
          nrodoc.val("")
          nrodoc.attr("required", false )
        })

      {% endif %}

        // confirm on submit
        $('#guardar').on('click', function(){
            if( !$('#ventasbundle_notadebcred_comprobanteAsociado').val() &&
                  (!$('#ventasbundle_notadebcred_periodoAsocDesde').val() || !$('#ventasbundle_notadebcred_periodoAsocHasta').val()))
            {
                alert('Debe indicar un comprobante asociado o un rango de período válido.');
                $('#ventasbundle_notadebcred_comprobanteAsociado').select2('open');
                return false;
            }
            let vuelto = $(".vuelto").html() ? $(".vuelto").html().replace(",", ".") : 0

            if( $('.datos-formapago').data('tipopago') != 'CTACTE' ){
                if(  $(':invalid').length>0 || parseFloat(vuelto) <0 ){
                    alert( 'Completar todos los datos para facturar!' );
                    return false;
                }
            }
            if( $('table.detalle tbody tr.item').length > 0 ){
                emitirTicket = $('#emitirTicket').is(':checked')
                let txt = emitirTicket ? '\n\n Se emitirá un Ticket' : '\n\n Se enviarán los datos a la Afip para registrar el comprobante'
                if (confirm('Confirma la generación de la Nota Electrónica?'+txt)) {
                    registrarComprobante()
                }else{
                    return false;
                }
            }else{  alert('Debe ingresar items a la Nota'); return false;}

{#            $('#ventasbundle_notadebcred').submit();#}
        })
    });
});

function setPeriodoAsociado(){
  let hoy = new Date().toLocaleString("en-GB").slice(0,10).split('-').reverse().join('-').replaceAll('/','-')

  jQuery('#ventasbundle_notadebcred_periodoAsocDesde').val( hoy )
  jQuery('#ventasbundle_notadebcred_periodoAsocHasta').val( hoy )
}

function registrarComprobante(){
{#  let id = jQuery('#ventasbundle_notadebcred_id').val()#}
  const formdata = jQuery("#ventasbundle_notadebcred").serialize()
  const url = jQuery("#ventasbundle_notadebcred").attr("action")
  setFacturando(true)
  jQuery.post(url, formdata, function(data){
    if(data.res  === 'OK'){
      jQuery('#ventasbundle_notadebcred_id').val(data.id)
      enviarEmision(data.id)
    }else{
      alert(data.msg)
      setFacturando(false)
    }
  })
}

function enviarEmision(id){
  jQuery('#emitirTicket').is(':checked') ?
    imprimirTicket(id) :
    emitirComprobanteWs(id)
}

function emitirComprobanteWs(notaId){
  jQuery('#guardar span').html('Emitiendo Comprobante...')
  const url = jQuery('#guardar').data('urlemitir')
  console.log(notaId)
  jQuery.post(url, {id:notaId, entity: 'NotaDebCred'}, function(data){
    if(data.res === 'OK'){
      jQuery("#divEmitirTicket").remove()
      setFacturando(false)
      window.open(data.urlprint)
      location.href = jQuery('.cancelar').attr('href')
    }else{
      alert(data.msg)
      setFacturando(false)
      // salir
      console.log('salida x error ws')
      location.href = '{{ path("ventas_notadebcred") }}'
    }
  },'json').fail(function(data){
    alert('Ha ocurrido un error')
    setFacturando(false)
  })
}

function imprimirTicket(notaId){
  jQuery('#guardar span').html('Emitiendo Ticket...')
  url = jQuery('#guardar').data('urlticket')
  const driver = getDriver()
  jQuery.get(url, {id:notaId, entity: 'NotaDebCred'}, function(data){
    if(data.res === 'OK' && driver){
      try {       
        driver.iniciarTrabajo();
        
        driver.especificarPie('1'," ") 
        driver.especificarPie('2',data.pie[0]) 
        driver.especificarPie('3',data.pie[1]) 
        
        driver.cancelarComprobante();
        let params = data.cliente
        driver.datosCliente(...params);

        driver.abrirComprobante(data.tipo);
        // items
        data.items.forEach(function(i){
          driver.imprimirItem2g(...i)
        })

        // descuentos
        if(data.montodto!=0)
            driver.imprimirDescuentoGeneral(data.porcdto, data.montodto);
        // tributos (iibb)
        if(data.iibb) driver.ImprimirOtrosTributos(...data.iibb)
        
        // pagos
        if(data.pagos){
           data.pagos.forEach(function(i){
            driver.imprimirPago2g(...i)
          }) 
        }

        driver.cerrarComprobante();
        driver.finalizarTrabajo();

        //  nro comprobante emitido
        driver.iniciarTrabajo();
        driver.ultimoComprobante(data.tipo);
        driver.finalizarTrabajo();
        let nroTicket = driver.response.ultimoNumero

        if(confirm('Se ha registrado la impresión del ticket N° '+nroTicket)){
            jQuery('#guardar span').html('Guardando Ticket...')
            procesarTicket(notaId,'NotaDebCred',nroTicket)
          }

      } catch (e){
        cancelarTicket(driver)
        registrarMovimientoIfu("cmAbrirComprobante",e)
        alert(e)
        setFacturando(false)
        console.log('salida x error ifu')
        location.href = '{{ path("ventas_notadebcred") }}'
      }
    }else{
      alert(data.msg ? data.msg : 'Impresión cancelada!')
      setFacturando(false)
    }
  },'json').fail(function(data){
    alert('Ha ocurrido un error')
    setFacturando(false)
  })
}

function procesarTicket(id, entity, nroticket){
    const url = "{{path('ventas_factura_procesarticket')}}"
    jQuery.post(url, {id, entity, nroticket}, function(data){
    if(data.res === 'OK'){
        
      setFacturando(false)
      location.href = jQuery('.cancelar').attr('href')
    }else{
      alert(data.msg)
      setFacturando(false)
    }
  },'json').fail(function(data){
    alert('Ha ocurrido un error')
    setFacturando(false)
  })
}

function getDriver(){
  modelo = '{{modelo_tickeadora}}'
  puerto = '{{puerto_tickeadora}}'
  baudios = '{{baudios_tickeadora}}'
  host = '{{host_tickeadora}}'
  // verificar si falta configuracion
  if( !modelo || !puerto || !baudios || !host ){
    alert( ' No se pueden emitir tickets en este momento. Faltan configuraciones de la impresora!');
    setFacturando(false)
    return false
  }
  const driver = new Driver();
  driver.host = host
  driver.modelo = modelo;
  driver.puerto = puerto;
  driver.baudios = baudios;
  return driver
}

function cancelarTicket(){
    const driver = getDriver()
    driver.iniciarTrabajo()
    driver.cancelarComprobante()
    driver.finalizarTrabajo()
}

function setFacturando(on){
  if(on){
    jQuery('.cancelar').hide()
    jQuery('#guardar').attr('disabled', true)
    jQuery('.loader_facturar').removeClass('hidden')
    jQuery('#guardar span').html('Guardando datos...')
  }else{
    setTimeout(function(){
        jQuery('.loader_facturar').addClass('hidden');
        jQuery('#guardar span').html('Guardar')
        jQuery('.cancelar').show();
        jQuery('#guardar').removeAttr('disabled')
      }, 1000);
  }
}
function registrarMovimientoIfu(comando, error=null){
   url = "{{ path('ifu_registrar_movimiento') }}" 
   data = {caja:"1", comando, error } 
   console.log(data)
   jQuery.post(url, data, function(data){
    if(data.res !== 'OK'){
        alert(data.msg)
    }
  },'json').fail(function(data){
    alert('Ha ocurrido un error')
  })
}

</script>{% endblock %}