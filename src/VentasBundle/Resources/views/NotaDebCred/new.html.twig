{% extends "AppBundle::layout.html.twig" %}
{% block pageheader %}

{% block extra_css %}
<link rel="stylesheet" href="{{ asset('assets/css/ventas.css') }}" type="text/css" media="all" />
{% endblock %}

<div class="pageheader notab">
    <h1 class="pagetitle">Notas de Débito y Crédito</h1>
</div><!--pageheader-->
{% endblock %}
{% block contentwrapper %}
<div id="contentwrapper" class="contentwrapper">
<h1 id="popup_title" >Alta de Nueva Nota
    <span class="floatright">{{entity.fecha|date('d/m/Y H:i')}} &nbsp; | &nbsp; {{app.user.username}}</span>
</h1>
{% include "AppBundle::notificacion.html.twig" %}
<div class="divForm divEdicion">
   {{ form_start(form, {'attr': {'class': 'form-horizontal','id':'ventasbundle_notadebcred'}}) }}

    <fieldset class="fields" >

        {% include "VentasBundle:Partial:block-cliente.html.twig" %}

        {% include "VentasBundle:Partial:block-moneda.html.twig" %}

        {% include "VentasBundle:Partial:block-formapago.html.twig" %}

    </fieldset>
    <fieldset >

        {% include "VentasBundle:Partial:_partial-datos-cliente.html.twig" with {'item':entity.cliente} %}

        {% include "VentasBundle:Partial:_partial-datos-cf.html.twig" %}

        <div class="datos-formapago">
            {% include "VentasBundle:Venta:_partial-datos-formapago.html.twig" with {'item':entity.formaPago}  %}
        </div>
    </fieldset>

    <fieldset class="fields" >
        <div style="display:inline-block; width: 25%;">
            {{ form_row(form.notaElectronica.tipoComprobante) }}
        </div>
        <div style="display:inline-block; width: 50%;">
            <div>
            {{ form_label(form.facturas)  }}
            {{ form_widget(form.facturas, { 'attr': { 'class' : 'select2', 'tabindex':'0', 'style':'width:90%'} }) }}
            </div>
        </div>
        <div style="display:inline-block; width:20%;">
            {{ form_row(form.precioLista) }}
        </div>
    </fieldset>

    <fieldset>
        <div style="padding-top: 20px; margin:auto; width: 100%;">
            {{ form_errors(form.detalles) }}
            <table cellpadding="0" cellspacing="0" border="0" class="venta stdtable noaction">
                <thead>
                    <tr>
                        <th style="width:3%;">#</th>
                        <th>Producto</th>
                        <th style="width:12%;">Cant.</th>
                        <th style="width:10%;">Precio Unit.</th>
                        <th style="width:10%;">SubTotal</th>
                        <th style="width:3%;"><a href="#" id="linkAdd" tabindex="0"  title="Agregar"><span class="add-item-button">+</span></a></th>
                    </tr>
                </thead>
                <tbody data-index="{{form.detalles | length }}" data-prototype="{% filter escape %}{% include 'VentasBundle:Partial:item-prototype.html.twig' with {'item':form.detalles.vars.prototype} %}{% endfilter %}">
                {% for item in form.detalles %}
                    <tr class="item" divdata="item_items">
                        <td class="ordTd"></td>
                        <td class="prodTd">
                            {{ form_widget(item.producto,{'attr':{'style':'width:80%','url':path('get_lista_productos'), 'fnc':'openModalProducto', 'mtitle':'Seleccionar Producto'}}) }}
                            <a href="javascript:void(0)" class="btn btnaction btn_search"></a>
                        </td>
                        <td class="cantTd">
                            {{ form_widget(item.cantidad, { 'attr': {'class' : 'number floatleft','min':'0'} }) }}
                            <span class="unidmed floatleft" style="padding-left: 5px"></span>
                        </td>
                        <td class="precTd alignright">
                            <span>0</span>
                            {{ form_widget(item.precio) }}  {{ form_widget(item.alicuota) }}
                        </td>
                        <td class="itmSubtotalTd alignright"></td>
                        <td class="delTd" style="text-align:center;"></td>
                    </tr>
                {% endfor %}
                </tbody>

                <tfoot>
                    <tr>
                        <th colspan="4" style="text-align:right">&nbsp; </th>
                        <th class="cktotal red alignright" id="subtotalTh"></th>
                        <th style="text-align:center;"></th>
                    </tr>
                </tfoot>

            </table>
        </div>
    </fieldset>
    <fieldset>
        <div style="margin:auto; width: 100%;">
            {% include "VentasBundle:Partial:_partial-resumen.html.twig" with {'showiva': true, 'showiibb': true } %}
        </div>
    </fieldset>

    <fieldset>
        <br clear="all" />
        <div class="actionbutton">
            <button class="guardar tabbable" type="submit">GUARDAR</button>
            <a class="cancelar tabbable" type="button" href="{{ path('ventas_notadebcred')}}">Cancelar</a>
        </div>
    </fieldset>

    <div class="notifmsg info png_bg" style="margin-top:50px">
        <a href="#" class="close"></a>
        <div><small>Ctrl+Enter = Abrir búsqueda <strong class="divnotif">|</strong> Ctrl+Alt+C = Buscar Cliente <strong class="divnotif">|</strong> Ctrl+Alt+F = Buscar Forma de Pago <strong class="divnotif">|</strong> + = Agregar producto <strong class="divnotif">|</strong> Ctrl+Alt+G = Guardar  </small>
        </div>
    </div>
    <div name="rest" class="hiddenformrest">{{ form_rest(form) }}</div>
  {{ form_end(form) }}
</div>
</div>
{% endblock %}
{% block extra_javascripts %}
{% include "AppBundle::block-list-js.html.twig" %}
<script type="text/javascript">
jQuery(function ($) {
    $(window).on('load', function () {
        if('{{entity.cliente.consumidorfinal}}'){
            $('.datos-cliente').hide();
            $('.datos-cf').show();
        }else{
            $('.datos-cf').hide();
            $('.datos-cliente').show();
        }
        $('#ventasbundle_notadebcred_nombreCliente').css('width', '95%')
        $('.cancelar').on('blur', function(e){
            $('#ventasbundle_notadebcred_cliente').select2('focus')
            e.stopPropagation();
        })
        $(document).on('keydown',function(e){ detectarControles(e); })
        $('.select2').select2({ width:'style' });

        $('#ventasbundle_notadebcred_cliente').select2({
            ajax: {
            url: "{{path('get_autocomplete_clientes')}}",
            type: "post",
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                searchTerm: params.term // search term
                };
            },
            processResults: function (response) {
                return {
                    results: response
                };
            },
            cache: true
            },
            minimumInputLength: 3
        }).on('change', function() {
            id = $(this).val();
            $.getJSON( "{{ path('get_datos_venta_cliente')}}" , {'id': id}).done(function(data){
                // actualizar partial datos
                if(data){
                        // ocultar iva e iibb en resumen
                        $('#ivaTd, #iibbTd').hide();
                     $('#categoriaIva').val( data.categoriaIva );
                    if( data.categoriaIva == 'C' ){
                        $('.datos-cliente').hide();
                        $('.datos-cf').show();
                        $('#ventasbundle_notadebcred_nombreCliente').focus();
                    }else{
                        $('.datos-cf').hide();
                        $('.datos-cliente').html(data.partial);
                        color = (data.cuitValido) ? '#666666' : 'orangered';
                        $('.cuitcliente').css('color',color);
                        $('.datos-cliente').show();
                        // mostrar iva e iibb si corresponde
                        $('#ivaTd').show();
                        if( data.categoriaIva == 'I'){
                            $('#iibbTd').show();
                        }
                    }
                    actualizaTotales();
                }
                // REVISAR CUANDO TERMINE COBRO CON LAS FACTURAS ELECTRONICAS
                /*var factura_selector = jQuery('[id^="ventasbundle"][id$="_facturas"]');
                factura_selector.html('<option></option>');
                $.get( "{{ path('select_facturas_cliente') }}",{id: $(this).val() } , function( data ) {
                    for (var i = 0, total = data.length; i < total; i++) {
                        txt = data[i].tipoFactura +' '+ data[i].nroFactura + ' ($' + data[i].total + ')';
                        factura_selector.append('<option value="' + data[i].id + '">' + txt + '</option>');
                    }
                });
                */

            });
        });

        $('#ventasbundle_notadebcred_formaPago').on('change', function() {
            $('.datos-formapago').html('');
            id = $(this).val();
            $.get( "{{ path('get_datos_formapago')}}" , {'id': id}).done(function(data){
                // actualizar datos
                if(data){
                    $('.datos-formapago').html(data);
                    const porcentaje = $('#porcentajeRecargo').val();
                    $('.porcentajeRecargo').text( porcentaje );
                    const spanValor = $('#porcentajeRecargoTd').find('.valor');
                    const subtotal = $('#subtotalTh').find('.valor').data('valor');
                    const nuevoValor = subtotal * (porcentaje/100);
                    // nuevo valor de descuento/recargo
                    spanValor.data('valor',nuevoValor);
                    // nuevo valor a pagar
                    const total = $('#totalTd').find('.valor')
                    total.data('valor',subtotal + nuevoValor);
                    actualizaTotales();
                }
            });
        });

        $('#ventasbundle_notadebcred_cliente').change();

        // al presionar ctrl+enter abrir popup
        $(document).on('click change keydown',
            '#ventasbundle_notadebcred_cliente', function(e) {
            if (e.keyCode == 13 && e.ctrlKey ) {
                e.preventDefault();
                openModal($(this))
            }
        });
        // en buscar abrir popup correspondiente
        $(document).on('click','.btn_search',function(e) {
            obj = $(this).parent().find('select');
            e.preventDefault();
            openModal(obj)
        });
    $('#ventasbundle_notadebcred_moneda').on('change',function(){
        label = $(this).prev('label');
        label.find('small').remove();
        id = $(this).val();
        $.getJSON( "{{ path('get_datos_moneda')}}" , {'id': id}).done(function(data){
            // actualizar datos
            if(data){
                span = $('<small></small>').html(data.partial);
                label.append(span);
                $('.simbolo').html(data.simbolo);
                $('#ventasbundle_notadebcred_cotizacion').val( data.cotizacion );
                actualizaTotales();
            }
        });
    });
    $('#ventasbundle_notadebcred_moneda').change();

// Get the container who holds the collection
    $collectionHolder = $('table.venta tbody');
    $collectionHolder.find('.delTd').each(function() {
        addItemFormDeleteLink($(this));
    });
    $collectionHolder.find('.ordTd').each(function(i) {
        $(this).html(i + 1);
    });
    $('#linkAdd').on('click', function(e) {
        e.preventDefault();
        addNewItem();
        e.stopPropagation();
    });

    $('#ventasbundle_notadebcred_cliente').focus();

    // confirm on submit
    $('#ventasbundle_notadebcred').on('submit', function(){
        if( $('tbody tr.item').length > 0 ){
            if (!confirm('Confirma la generación de la Nota Electrónica?')) {
               return false;
            }
        }else{  alert('Debe ingresar items a la Nota'); return false;}
    })
});
// funciones personalizas para el formulario
 function addNewItem() {
    var prototype = $collectionHolder.data('prototype');
    var index = $collectionHolder.data('index');
    var newForm = prototype.replace(/items/g, index);
    $collectionHolder.append(newForm);
    $collectionHolder.data('index', index + 1);
    addItemFormDeleteLink($collectionHolder.find('.delTd').last());
    $collectionHolder.find('.ordTd').last().html($collectionHolder.data('index'));
    $collectionHolder.find('.cantTd input').last().val(1);

    $('input').on('focus',function(){ $(this).select(); });
    $('.cantTd input').change(function(){
        if(isNaN( parseFloat($(this).val()) )) $(this).val(0);  actualizaTotales();
    });

    // agregar funcionalidad a select producto
    const newProd = $collectionHolder.find('[name*="producto"]').last();

    productolast = $('[id*="_producto"]').last();
    productolast.select2({
            ajax: {
            url: "{{path('get_autocomplete_productos')}}",
            type: "post",
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                searchTerm: params.term // search term
                };
            },
            processResults: function (response) {
                return {
                    results: response
                };
            },
            cache: true
            },
            minimumInputLength: 3
        }).on('change', function() {
            obj = $(this);
            var data = {
                id: $(this).val(),
                listaprecio: $('#ventasbundle_notadebcred_precioLista').val(),
            };
            $.getJSON( "{{ path('get_datos_venta_producto')}}" , data).done(function(data){
                // actualizar datos
                objprecio = obj.parent().siblings('.precTd');
                objprecio.find('[id*="_precio"]').val( data.precio );
                objprecio.find('[id*="_alicuota"]').val( data.alicuota );
                actualizaTotales();

            });
        });
        productolast.select2('focus');

}
function addItemFormDeleteLink($itemFormTd) {
    var $removeFormA = jQuery('<a href="#" class="delItem" title="Quitar"><span class="del-item-button">-</span></a>');
    $itemFormTd.append($removeFormA);
    $removeFormA.on('click', function(e) {
        var res = true;
        if ($itemFormTd.parent().find(".cantTd input").val() > 0)
            res = confirm('Desea eliminar este item?');
        if (res) {
            e.preventDefault();
            $itemFormTd.parent().remove();
            actualizaTotales();
        }
    });
    $removeFormA.on('blur', function(e) {
        $('#linkAdd').focus();
    });
}
function openModal(obj){
    const url = obj.attr('url');
    const fnc = obj.attr('fnc')+'(obj)';
    const title = obj.attr('mtitle');
    $('#popup')
        .html('<div class="loaders" style="width: 100%;text-align: center;margin-top: 10px;"><img src="{{asset('assets/images/loaders/loader1.gif')}}" alt="" /></div>')
        .load( url , function(){
            eval( fnc )
         })
        .dialog({
            modal: true, autoOpen: true, title: title, width: '40%', minHeight: 400,
            close: function() {
                // volver focus al control
                $(obj).focus();
             },
        });
}

// CLIENTES
function openModalCliente(){
    var oTable = $('#clientes_table').dataTable({
                "columnDefs": [
                    // These are the column name variables that will be sent to the server
                    { "name": "nombre", "targets": 0 },
                    { "name": "cuit",  "targets": 1 },
                    { "targets"  : 'nosort', "orderable": false }
                ],
                "rowCallback": function (row, data) {
                    // seleccionar on click
                    $(row).find('a').on('click', function(){
                        var data = {
                            id: $(this).data('id'),
                            text: $(this).text()
                        };
                        var newOption = new Option(data.text, data.id, true, true);
                        $('#ventasbundle_notadebcred_cliente').append(newOption).trigger('change');
                        $('#popup').dialog("destroy");
                        $('#ventasbundle_notadebcred_cliente').focus();
                    })
                 },
                // Server-side parameters
                "processing": true,
                "serverSide": true,
                // Ajax call
                "ajax": {
                    "url": "{{ path('cliente_list_datatables') }}",
                    "type": "POST"
                },
                // Classic DataTables parameters
                "bPaginate" : true,
                "bInfo" : true,
                "bSearchable": true,
                "bLengthChange": true,
                "pageLength":10,
                "order": [[0, 'asc']],
                "sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
                    "sProcessing": "Cargando...",
                    "sLengthMenu": "Mostrar _MENU_ registros ",
                    "sZeroRecords": "Sin datos",
                    "sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
                    "sInfoEmpty": "Sin coincidencias",
                    "sInfoFiltered": "(filtrado de _MAX_ registros)",
                    "sSearch": "Buscar:"
                }
            });
     // focus en buscar
    $('#clientes_table_filter input').focus();
}
// FORMAS DE PAGO
function openModalFormaPago(){
    var fTable= $('#formapago_table').dataTable({
                "bAutoWidth": false,
                "bRetrieve" : true,
                "columnDefs": [ {
                    "targets"  : 'nosort',
                    "orderable": false
                  }],
                "rowCallback": function (row, data) {
                    // seleccionar on click
                    $(row).find('a').on('click', function(){
                        $('#ventasbundle_notadebcred_formaPago').val($(this).data('id'));
                        $('#popup').dialog("destroy");
                        $('#ventasbundle_notadebcred_formaPago').change();
                        $('#ventasbundle_notadebcred_formaPago').focus();
                    })
                 },
		"sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
			"sLengthMenu": "Mostrar _MENU_ registros ",
			"sZeroRecords": "Sin datos",
			"sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
			"sInfoEmpty": "Sin coincidencias",
			"sInfoFiltered": "(filtrado de _MAX_ registros)",
                        "sSearch": "Buscar:",
                        "sSelect": "%d seleccionados"
		}
	});
     // focus en buscar
    $('#formapago_table_filter input').focus();
}
// PRODUCTOS
function openModalProducto(obj){
    const listaprecio = $('#ventasbundle_notadebcred_precioLista').val();
    const deposito = 1;
    const cotizacion = $('#ventasbundle_notadebcred_cotizacion').val();
    var oTable = $('#productos_table').dataTable({
                "columnDefs": [
                    // These are the column name variables that will be sent to the server
                    { "name": "nombre", "targets": 0 },
                    { "name": "codigo",  "targets": 1 },
                    { "name": "precio",  "targets": 2 },
                    { "name": "stock",  "targets": 3 },
                    { "targets"  : 'nosort', "orderable": false }
                ],
                "rowCallback": function (row, data) {
                    // registrar seleccion
                    $(row).find('td:nth-child(3n),td:nth-child(4n)').addClass('alignright');
                    $(row).find('a').on('click', function(e){
                        e.preventDefault();
                        var data = {
                            id: $(this).data('id'),
                            text: $(this).text()
                        };
                        var newOption = new Option(data.text, data.id, true, true);
                        obj.append(newOption).trigger('change');
                        $('#popup').dialog("destroy");
                        obj.select2('focus');
                    })
                 },
                // Server-side parameters
                "processing": true,
                "serverSide": true,
                // Ajax call
                "ajax": {
                    "url": "{{ path('producto_list_datatables') }}",
                    "type": "POST",
                    "data" : { 'listaprecio' : listaprecio,
                                'deposito' : deposito,
                                'cotizacion' : cotizacion
                            },
                },
                // Classic DataTables parameters
                "bPaginate" : true,
                "bInfo" : true,
                "bSearchable": true,
                "bLengthChange": true,
                "pageLength":10,
                "order": [[0, 'asc']],
                "sPaginationType": "full_numbers",
                "oLanguage": {
                    "oPaginate": {
                        "sFirst": "<<",
                        "sNext": ">",
                        "sLast": ">>",
                        "sPrevious": "<"
                    },
                    "sProcessing": "Cargando...",
                    "sLengthMenu": "Mostrar _MENU_ registros ",
                    "sZeroRecords": "Sin datos",
                    "sInfo": " _START_ / _END_  -  <strong>Total: _TOTAL_ </strong>",
                    "sInfoEmpty": "Sin coincidencias",
                    "sInfoFiltered": "(filtrado de _MAX_ registros)",
                    "sSearch": "Buscar:"
                }
            });
    // cambiar simbolo en columna precio
    oTable.find('.simbolo').text( $('#simbolo').val() );
     // focus en buscar
    $('#productos_table_filter input').focus();
}
function detectarControles(e) {
    if( e.ctrlKey && e.altKey ){
        // ctrl + alt + C
        if( e.keyCode == 67 ){
            e.preventDefault();
            openModal($('#ventasbundle_notadebcred_cliente'))
        }
        // ctrl + alt + G
        if( e.keyCode == 71 ){
            e.preventDefault();
            $('#ventasbundle_notadebcred').submit();
        }
    }
}

function actualizaTotales(){
    let iva = iibb = descrec = 0;
    let subTotal = totalIVA = totalIIBB = 0;
    const cotizacion = parseFloat($('#ventasbundle_notadebcred_cotizacion').val()) ;
    const categoriaIva = $('#categoriaIva').val();
// porcentaje de descuento/recargo
    const porcentaje = checknumero( $('#porcentajeRecargo') ) ;
    $("tr.item").each(function(){
        let item = $(this);
        const cant =  checknumero( item.find('.cantTd input') ) ;
        //checknumero( item.find('.precTd input[type=text]') ) ;
        let precio = checknumero( item.find('[id*="_precio"]') );
        let alicuota = checknumero( item.find('[id*="_alicuota"]') );
        if( categoriaIva == 'C' ){
            // precio + iva
            precio = precio * ( 1 + (alicuota/100));
        }else{
            // aplicar dto para calcular el iva
            dto = precio * (porcentaje/100)
            iva = (precio + dto) * (alicuota/100);
            if( categoriaIva == 'I' ){
                iibb = (precio + dto) * 0.035;
            }
            dtoTot = (dto*cant) / cotizacion;
            descrec += dtoTot;
        }

// calcular la cotización si es distinta a 1
        precUnit = precio / cotizacion;
        precTot = (precio * cant) / cotizacion;
        item.find('.precTd span').html( precUnit.toFixed(3) );
        item.find('.itmSubtotalTd').text( precTot.toFixed(3));
// totalizar
        subTotal += (precio * cant);
        totalIVA += (iva * cant);
        totalIIBB += ( iibb * cant );
    });
    subTotalResumen = subTotal/cotizacion;
    totalIvaResumen = totalIVA/cotizacion;
    totalIibbResumen = totalIIBB/cotizacion;
    $('#subtotalTh').html( subTotalResumen.toFixed(3));
    $('#importeSubtotal').html( subTotalResumen.toFixed(3));
    if( categoriaIva == 'C' ){
        descrec = subTotalResumen * (porcentaje/100);
    }
    const totalgral = subTotalResumen + descrec + totalIvaResumen + totalIibbResumen;
    $('#importeRecargo').text(descrec.toFixed(3));
    $('#importeTotal').text(totalgral.toFixed(3));
    // iva e iibb

    $('#importeIVA').text( totalIvaResumen.toFixed(3));
    $('#importeIIBB').text( totalIibbResumen.toFixed(3));
    $collectionHolder.find('.ordTd').each(function(index) {
        $(this).html(index+1);
    });
}
});
</script>{% endblock %}