{% extends "AppBundle::layout.html.twig" %}
{% block pageheader %}
<div class="pageheader notab">
    <h1 class="pagetitle">Pedidos a Proveedor</h1>
</div><!--pageheader-->
{% endblock %}
{% block contentwrapper %}
<style>
.tag-descuento{
  display: inline-block;
  border: 1px solid grey;
  padding: 4px 10px;
  position: relative;
  border-radius: 10%;
  margin-right: 10px;
}
.close-icon {
  position: absolute;
  top: -10px;
  right: -4px;
  cursor: pointer;
  font-weight: bold;
  color: red;
  font-size: 18px;
}
.flexbox-descuentos{
  display:flex;
  flex-direction:row;
  align-items:center;
  justify-content: center;
}
.stdtable tfoot th{
  padding: 2px 10px !important;
}
</style>


<div id="contentwrapper" class="contentwrapper">
<h1 id="popup_title" >{{ (entity.id) ? 'Editar Pedido ' : 'Alta de Nuevo Pedido' }}</h1>
{% include "AppBundle::notificacion.html.twig" %}
<div class="divEdicion">
    {{ form_start(form, {'attr': {'class': 'stdform'}}) }}
        <fieldset >
        {% if entity.estado == 'PENDIENTE' %}
        <div class="two_fields">
                <div><label for="nroPedido">Nº pedido:</label>
                    <input type="text" value="{{entity.nroPedido}}" disabled="disabled" class="width100">
                </div>
                <div><label for="nroPedido">Fecha Pedido:</label>
                    <input type="text" value="{{entity.fechaPedido|date('d/m/Y')}}" disabled="disabled" class="width100">
                </div>
            </div>
            <div class="two_fields">
                <div><label for="nroPedido">Proveedor:</label>
                    <input type="text" value="{{entity.proveedor}}" disabled="disabled" class="smallinput">
                </div>
                <div><label for="nroPedido" style="width: 100px;">Estado:</label>
                    <input type="text" value="{{entity.estado}}" disabled="disabled" class="width100">
                </div>
            </div>
            <div class="two_fields">
                <div><label for="nroPedido">Depósito:</label>
                    <input type="text" value="{{entity.deposito}}" disabled="disabled" class="smallinput">
                </div>
                {{ form_row(form.fechaEntrega, { 'attr': {'class' : 'datepicker','tabindex':'2', 'autofocus':true } }) }}
            </div>
            <div class="two_fields">
                <div class="alignright">
                    <button type="button" class="stdbtn print">Imprimir Pedido</button>
                </div>
            </div>

        {% else %}

            <div class="two_fields">
                <div><label for="nroPedido">Nº pedido:</label>
                    <input type="text" value="{{entity.nroPedido}}" disabled="disabled" class="width100">
                </div>
                {{ form_row(form.fechaPedido, { 'attr': {'class' : 'datepicker','tabindex':'2' } }) }}
               {{ form_row(form.estado) }}
            </div>
            <div class="two_fields">
                {{ form_row(form.proveedor, { 'attr': {'class' : 'select2'} }) }}
                <div><label for="estado" style="width: 100px;">Estado:</label>
                    <input type="text" value="{{entity.estado}}" disabled="disabled" class="width100">
                </div>
            </div>
            <div class="two_fields">
                {{ form_row(form.deposito) }}
                {{ form_row(form.fechaEntrega, { 'attr': {'class' : 'datepicker','tabindex':'2'} }) }}
            </div>
            <div class="two_fields">
                <div style="text-align:center">
                  <button class="stdbtn" type="button" onclick="cargarBajominimo()" >Cargar productos debajo del mínimo</button>
                </div>
                <div>
                {{ form_label(form.cerrado, 'Enviado al Proveedor', {'label_attr': {'style':'width:115px'}}) }}
                {{ form_widget(form.cerrado,{'attr': {'title':'Marcar cuando se envía el pedido al Proveedor. Hasta que no se marque se podrán agregar o modificar items del pedido.'} }) }}
                </div>
            </div>

        {% endif %}

            <div style="padding-top: 20px;" id="divItems">
                <table cellpadding="0" cellspacing="0" border="0" class="stdtable noaction">
                    <thead>
                        <tr>
                            <th style="width:5%;">Nº</th>
                            <th>Producto</th>
                            <th style="width:10%;">Stock</th>
                            <th style="width:12%;">Cantidad</th>
                            <th style="width:10%;">TOTAL</th>
                            <th style="width:10%;">Precio Unit.</th>
                            <th style="width:10%;">Monto TOTAL</th>
                            <th style="width:3%;text-align:center;" colspan="2">
                                {% if entity.estado == 'NUEVO' %}
                                <a href="javascript:void(0)" id="linkAdd" data-url="{{path('compras_render_item_pedido')}}" title="Agregar"><img src="{{asset('assets/images/icons/add.png')}}" /></a>
                                {% endif %}
                            </th>
                        </tr>
                    </thead>
                     <tbody>

                       {% for item in entity.detalles %}
                        {% include "ComprasBundle:Pedido:partial-items.html.twig" with {'idx':loop.index} %}
                       {% endfor %}
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="6"> <span style="float:right;"> Subtotal: $</span> </th>
                            <th class="subtotal alignright" >{{entity.costoTotal|number_format(3,'.','')}}</th>
                        </tr>
<tr>
  <th colspan="5" rowspan="3">
{{ form_widget(form.descuentos) }}
    <div class="flexbox-descuentos">
      <div>
        <a class="btn btn_dollartag" href="javascript:void(0)" title="Agregar Descuento" onclick="agregarDescuentos()"> <span>Descuentos: </span> </a>
      </div>
      <div id="descuentos" style="padding:10px"> </div>

    </div>
  </th>
  <th><span style="float:right;"> Descuento: $</span> </th>
  <th class="alignright">{{ form_widget(form.montoDescuento, { 'attr': {'class' : 'input-hidden' } }) }}</th>

</tr>
<tr>
  <th><span style="float:right;"> I.V.A.: $</span></th>
  <th class="ivaTotal alignright">{{ form_widget(form.montoIva, { 'attr': {'class' : 'input-hidden' } }) }}</th>

</tr>
<tr>
  <th><span style="float:right;"> TOTAL: $</span></th>
  <th class="total alignright" style="font-size:12px;">{{entity.montoTotal|number_format(3,'.','')}}</th>

</tr>
                    </tfoot>
                </table>
            </div>

            <br clear="all" />
            <div class="actionbutton">
                 {% if entity.id and entity.estado in ['NUEVO','PENDIENTE'] %}
                        <a type="button" class="cancelar floatleft delete" href="javascript:void(0)">Eliminar</a>
                 {%endif%}
                <button class="guardar" type="submit" >Guardar</button>
                <a class="cancelar" type="button" href="{{ path('compras_pedido')}}">Cancelar</a>
            </div>
        </fieldset>
        <div class="hiddenformrest" name="rest" style="display:none">{{ form_rest(form) }}</div>
    {{ form_end(form) }}
      {% if entity.id and app.user.access(app.session.get('unidneg_id'),'compras_pedido_delete')  %}
        {{ form(delete_form) }}
      {%endif%}
</div>
</div>
{% endblock %}
{% block extra_javascripts %}
<script type="text/javascript" src="{{ asset('assets/js/plugins/chosen.jquery.min.js') }}"></script>
<script type="text/javascript">
//var $collectionHolder;
jQuery(document).ready(function($) {
    $('.datepicker').datepicker({dateFormat: 'dd-mm-yy'});
    $('.select2.select2-container').css('width','60%');
    $(".chzn-select").chosen();
    $(document).keypress(function(e) {
        if (e.which == 43) {
            e.preventDefault();
            $('#linkAdd').click();
        }
        if(e.which == 13){
            $('.additem').click();
        }
    });
    renderDescuentos()
    $('.guardar').click(function() {
        if( !$('#comprasbundle_pedido_proveedor').val() ){
            alert('Debe seleccionar un Proveedor');
            return false;
        };
        if( $('#comprasbundle_pedido_cerrado').is(':checked')){
            let items = $('tbody tr.item')
            let msg = 'Confirma el envío del pedido al proveedor?'
            if( items.length > 0 ){
                items.each(function(){
                  let cantidad = parseFloat( $(this).find('.cantTd').text() )
                  if(cantidad === 0) {
                    msg = 'Hay productos en el pedido con cantidad cero!! \n\n'+msg
                    return false
                  }
                })
                if (!confirm(msg)) {
                    return false;
                }
            }else{
                alert('Debe ingresar items al pedido para enviar!'); return false;
            }
        }
    });
    // si cambia el depósito cambiar el stock
    $('#comprasbundle_pedido_deposito').on('change',function(){
        var id = '{{entity.id}}';
        var dep = $(this).val();
        $.ajax({
            url: "{{ path("get_compras_partial_items") }}",
            data: 'id='+ id +'&dep='+dep,
            success: function(data) {
                $('table').find('tbody').html(data);
            }
        });
    });
    $(document).on('click','.delTd', function(e) {
        var res = true;
        res = confirm('Desea eliminar este item?');
        if (res) {
            e.preventDefault();
            id = $(this).data('id');
            tr = $(this).parent().parent();
          // Eliminar item
          $.post( "{{path('compras_item_pedido_delete')}}" , {'id':id},function(data){
            if(data==='OK'){
                // eliminar de la tabla
                tr.remove();
                recalcularTotales();
            }else{
                alert( 'error '+data.msg );
            }
        } ).fail(function() {
           alert( "No se ha podido eliminar el item. Intente nuevamente." );
         });
        }
    });
    $('#linkAdd').on('click',function(){
        var partialurl =  $(this).data('url');
        $('#popup').dialog('open');
        // width: '70%', minHeight: 400,
        $('#popup')
            .html('<div class="loaders" style="width: 100%;text-align: center;margin-top: 10px;"><img src="{{asset('assets/images/loaders/loader1.gif')}}" alt="" /></div>')
            .load(partialurl, function() {
                var form = $("[name='comprasbundle_pedidodetalle']");
                form.find('#pedidoid').val('{{entity.id}}');
                var prod = form.find("#comprasbundle_pedidodetalle_producto");
                prod.chosen({no_results_text: "Sin resultados", search_contains: true});
                prod.change(function () {
                   changeProducto($(this));
                });
                form.find("#comprasbundle_pedidodetalle_bulto").uniform();
                form.find("#comprasbundle_pedidodetalle_bulto").change(function () {
                    changeBulto($(this));
                });
                form.find('.chzn-container').last().trigger('mousedown');
              })
            .dialog({
            modal: true, autoOpen: true, title: 'Agregar items al pedido',width: '50%', minHeight: 200,
            buttons: [{text: "Agregar", class: 'closePopup additem',
                    click: function() {
                        var form = $("[name='comprasbundle_pedidodetalle']");
                        if(!form.find("#comprasbundle_pedidodetalle_producto").val()){
                            alert('Debe ingresar un producto!');
                            form.find('.chzn-container').last().trigger('mousedown');
                            return false;
                        }
                        if(!form.find("#comprasbundle_pedidodetalle_cantidad").val()){
                            alert('Debe ingresar una cantidad!');
                            form.find("#comprasbundle_pedidodetalle_cantidad").focus();
                            return false;
                        }
                        if(form.find("#comprasbundle_pedidodetalle_bulto").is(':checked') && !form.find("#comprasbundle_pedidodetalle_cantidadxBulto").val()){
                            alert('Si indica por bulto debe ingresar una cantidad!');
                            form.find("#comprasbundle_pedidodetalle_cantidadxBulto").focus();
                            return false;
                        }
                        // guardar item en detalle
                         $.post( "{{path('compras_item_pedido_create')}}" , form.serialize(),function(data){
                             if(data.msg==='OK'){
                                 // insertar en la tabla
                                 $('.stdtable tbody').append('<tr></tr>');
                                     $('.stdtable tbody tr').last().replaceWith(data.tr);
                             /*    ord = $('.stdtable tbody tr').length + 1;
                                $('.stdtable tbody').append('<tr class="item" style="height:30px;"><td class="ordTd">'+
                                        ord+'</td><td>'+ data.prod +'</td><td class="stockTd alignright">'+data.stock+'</td><td class="alignright">'+data.cant+'</td>'+
                                        '<td class="alignright">'+data.total+'</td><td><a class="delTd" href="javascript:void(0)" title="Quitar" data-id="'+data.id+'" tabIndex="-1"><span class="minus"></span></a></td> </tr>');
*/

                                    recalcularTotales();
                                } else {
                                    alert('error ' + data.msg);
                                }
                            }).fail(function () {
                                alert("No se ha podido guardar el item. Intente nuevamente.");
                            }, "json");


                            jQuery(this).dialog("destroy");
                        }}]
            });
        });

 // EDITAR ITEM
    $(document).on('click','.editTd',function(){
        var partialurl =  $(this).data('url');
        var actionurl = $(this).data('actionurl');
        var tr = $(this).parent().parent();
        $('#popup').dialog('open');
        $('#popup')
            .html('<div class="loaders" style="width: 100%;text-align: center;margin-top: 10px;"><img src="{{asset('assets/images/loaders/loader1.gif')}}" alt="" /></div>')
            .load(partialurl, function() {
                var form = $("[name='comprasbundle_pedidodetalle']");
                form.find('#pedidoid').val('{{entity.id}}');
                var prod = form.find("#comprasbundle_pedidodetalle_producto");
                form.find("#comprasbundle_pedidodetalle_bulto").uniform();
                form.find("#comprasbundle_pedidodetalle_bulto").change(function () {
                    changeBulto($(this));
                });
                form.find("#comprasbundle_pedidodetalle_bulto").change();
                form.find('#comprasbundle_pedidodetalle_cantidad').focus();
              })
            .dialog({
            modal: true, autoOpen: true, title: 'Detalle del item',width: '50%', minHeight: 200,
            buttons: [{text: 'Guardar', class: 'closePopup additem',
                    click: function() {
                        var form = $("[name='comprasbundle_pedidodetalle']");
                        if(!form.find("#comprasbundle_pedidodetalle_cantidad").val()){
                            alert('Debe ingresar una cantidad!');
                            form.find("#comprasbundle_pedidodetalle_cantidad").focus();
                            return false;
                        }
                        if(form.find("#comprasbundle_pedidodetalle_bulto").is(':checked') && !form.find("#comprasbundle_pedidodetalle_cantidadxBulto").val()){
                            alert('Si indica por bulto debe ingresar una cantidad!');
                            form.find("#comprasbundle_pedidodetalle_cantidadxBulto").focus();
                            return false;
                        }
                        // guardar item en detalle
                         $.post( actionurl , form.serialize(),function(data){
                             if(data.msg==='OK'){
                                 // reemplazar en la tabla
                                 tr.replaceWith(data.tr);
                                  recalcularTotales();
                            } else {
                                alert('error ' + data.msg);
                            }
                            }).fail(function () {
                                alert("No se ha podido guardar el item. Intente nuevamente.");
                            }, "json");

                            $(this).dialog("destroy");
                        }}]
            });
        });

    {% if entity.id  %}
    $('button.print').click(function(){
        var url = "{{ path('compras_pedido_print', { 'id': entity.id }) }}";
        myWindow=window.open(url,"","toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=yes, titlebar=no,copyhistory=no, width=800, height=450")
        myWindow.focus();
    });
    recalcularTotales()
  //  $('#comprasbundle_pedido_deposito').change();
    {%endif%}
});
function changeProducto(producto) {
        var form = jQuery("[name='comprasbundle_pedidodetalle']");
        form.find('.loaders').show();
        form.find('#comprasbundle_pedidodetalle_cantidad').val('');
        form.find('#comprasbundle_pedidodetalle_bulto').prop('checked', 0);
        jQuery.uniform.update();
        form.find('#comprasbundle_pedidodetalle_cantidadxBulto').val('');
        form.find(".unidmed").hide();
        form.find('.prodPedPendiente').text('');
        jQuery.ajax({
            url: "{{ path("get_data_producto") }}",
            //async:false,
            dataType: "json",
            data: 'prod=' + producto.val() + '&dep=' + jQuery('#comprasbundle_pedido_deposito').val(),
            success: function (data) {
                form.find('#comprasbundle_pedidodetalle_cantidad').val(1);
                form.find('#alicuota').val(data.iva);
                form.find('#comprasbundle_pedidodetalle_precio').val(data.costo);
                form.find('.unidmed').text(data.unidmed);
                if (data.bulto) {
                    form.find('#unidmed_bulto').show();
                    form.find('#comprasbundle_pedidodetalle_cantidadxBulto').val(data.cantxBulto);
                } else {
                    form.find('#unidmed_unidad').show();
                    form.find('#comprasbundle_pedidodetalle_cantidadxBulto').val('');
                }
                form.find('#comprasbundle_pedidodetalle_bulto').prop('checked', data.bulto);
                jQuery.uniform.update();
                if (data.stock) {
                    txt = 'Cantidad en stock: ' + data.stock + ' ' + data.unidmed;
                    form.find('#comprasbundle_pedidodetalle_cantidadStock').val(data.stock);
                }else{
                    txt ='NO HAY EN STOCK';
                    form.find('#comprasbundle_pedidodetalle_cantidadStock').val(0);
                }
                form.find('.prodPedPendiente').text(txt);
                form.find('#comprasbundle_pedidodetalle_cantidad').focus();
                form.find('.loaders').hide();
            }
        });
    }
function changeBulto(item) {
        var form = jQuery("[name='comprasbundle_pedidodetalle']");
        form.find(".unidmed").hide();
        var cantxbulto = form.find('#comprasbundle_pedidodetalle_cantidadxBulto')
        if (item.is(':checked')) {
            form.find('#unidmed_bulto').show();
            cantxbulto.prop('readonly', false);
            cantxbulto.css('color', '#666');
            if (cantxbulto.val() == '')
                cantxbulto.val(1);
            cantxbulto.focus();
        } else {
            form.find('#unidmed_unidad').show();
            cantxbulto.prop('readonly', true);
            cantxbulto.css('color', '#fff');
        }
    }

function cargarBajominimo(){
  if(confirm('Desea realizar la carga de los productos con stock por debajo del mínimo?')){
    let prov = jQuery('#comprasbundle_pedido_proveedor').val()
    let dep = jQuery('#comprasbundle_pedido_deposito').val()
    let url = "{{ path('cargar_productos_bajominimo') }}?id="+{{entity.id}}+"&proveedor="+prov+"&deposito="+dep
    location.href = url
  }
}

{#function actualizarTotales(){
  let items = jQuery('tbody tr.item');
  let subtotal = 0;
  let ivaTotal = 0;
  // calcular subtotal
  items.each(function(i){
    item = jQuery(this);
    item.find('.ordTd').html(i+1);
    const montoTd = item.find('.montoTd')
    const cantTd = item.find('.cantTd')
    const cantidad = parseFloat(cantTd.data('cantidad'))
    const alicuota = montoTd.data('alicuota')
    const precio = parseFloat(montoTd.text())
    const ivaItem = (precio * (alicuota/100)) * cantidad
    montoTd.data('montoiva',ivaItem)
    ivaTotal += ivaItem
    subtotal = subtotal + parseFloat( item.find('.montototalTd').text() );
  })
  jQuery('.subtotal').html( subtotal.toFixed(3) );
  jQuery('#comprasbundle_pedido_montoIva').val( ivaTotal.toFixed(3) );
  calcularTotales()
}#}

{#function calcularTotales(){
  let descuentos = descuentosToArray()
  let subtotal = parseFloat( jQuery('.subtotal').html() )
  // DEFINIR COMO APLICAR LOS DESCUENTOS
  let monto = 0
  descuentos.forEach(function(desc){
    calc = subtotal * ( parseFloat(desc) /100 )
    subtotal = subtotal - calc
    monto = monto + calc
  })
  jQuery('#comprasbundle_pedido_montoDescuento').val( monto.toFixed(3) )
  iva = jQuery('#comprasbundle_pedido_montoIva').val()
  let total = subtotal + parseFloat(iva)
  jQuery('.total').html( total.toFixed(3) );
}#}

function recalcularTotales(){
  let items = jQuery('tbody tr.item');
  let subtotal = 0;
  let ivaTotal = 0;
  let dtoTotal = 0;
  let descuentos = descuentosToArray()
  items.each(function(i){
    item = jQuery(this);
    item.find('.ordTd').html(i+1);
    const montoTd = item.find('.montoTd')
    const cantTd = item.find('.cantTd')
    const cantidad = parseFloat(cantTd.data('cantidad'))
    const alicuota = montoTd.data('alicuota')
    const precio = parseFloat(montoTd.text())
    let subtotalItem = cantidad * precio 
    let subTotalFinal = subtotalItem
    /// aplicar dto
    let montoDto = 0
    descuentos.forEach(function(desc){
      calc = subtotalItem * ( parseFloat(desc) /100 )
      subtotalItem = subtotalItem - calc
      montoDto += calc
    })
    const ivaItem = subtotalItem * (alicuota/100)
    montoTd.data('montoiva',ivaItem) 
    subtotal += subTotalFinal
    ivaTotal += ivaItem
    dtoTotal += montoDto
  })
  jQuery('.subtotal').html( subtotal.toFixed(3) );
  jQuery('#comprasbundle_pedido_montoDescuento').val( dtoTotal.toFixed(3) )
  jQuery('#comprasbundle_pedido_montoIva').val( ivaTotal.toFixed(3) )
  let total = subtotal - dtoTotal + ivaTotal
  jQuery('.total').html( total.toFixed(3) );  
}


function agregarDescuentos(){
  let values = descuentosToArray()
  let idx = values.length ? values.length : 0
  if(idx < 5){
    // pedir nuevo descuento
    jPrompt('Ingresar el porcentaje', null, 'Descuentos', function(r) {
      let value = parseFloat(r)
      if(value){
        if( !isNaN( value ) && value > 0 && value <= 100){
          //agregarlo
          values[idx] = value
          jQuery('#comprasbundle_pedido_descuentos').val( values  )

          renderDescuentos()
          recalcularTotales()
        }else{
          alert('El porcentaje ingresado no es válido!')
        }
      }
		});
  } else {
    alert('Se alcanzó el máximo de 5 descuentos!')
  }
}

function renderDescuentos(){
  let values = descuentosToArray()
  // armar tags
  let  divDescuentos = jQuery('<div></div>')
  values.forEach( (v,i) =>  {
    let span = jQuery('<div class="tag-descuento" data-value="'+v+'" >' +v+ '% <span class="close-icon" onclick="removeDescuento()">&times;</span></div>')
    divDescuentos.append(span)
  })
  jQuery('#descuentos').html(divDescuentos)

}

function removeDescuento(){
  let values = []
  let el = jQuery(event.target).parent()
  el.remove()
  jQuery('#descuentos .tag-descuento').each(function(e,i){
    values.push( parseFloat( jQuery(this).data('value') ) );
  })
  jQuery('#comprasbundle_pedido_descuentos').val(values)
  recalcularTotales()
}

function descuentosToArray(){
  let descuentos = jQuery('#comprasbundle_pedido_descuentos')
  return descuentos.val().split(',').filter(Boolean)
}
</script>{% endblock %}