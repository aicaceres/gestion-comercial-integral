{% extends "AppBundle::layout.html.twig" %}
{% block pageheader %}
<style>
.divEdicion select:focus, .divEdicion input:focus, .divEdicion button:focus, .divEdicion a:focus, .divEdicion .select2-container *:focus{
        color:blue ;
        font-weight:bold ;
        background-color: gainsboro;
    }
</style>
<div class="pageheader notab">
    <h1 class="pagetitle">Notas de Débito y Crédito</h1>
</div><!--pageheader-->
{% endblock %}
{% block contentwrapper %}
<div id="contentwrapper" class="contentwrapper">
<h1 id="popup_title" >{{ (entity.id) ? 'Editar Nota ' : 'Alta de Nueva Nota' }}</h1>
{% include "AppBundle::notificacion.html.twig" %}
<div class="divEdicion">
    {{ form_start(form, {'attr': {'class': 'stdform'}}) }}
        <fieldset >
            <div class="formrows">
                <div class="two_fields">
                    {{ form_row(form.afipComprobante) }}
                    {{ form_row(form.fecha, { 'attr': {'class' : 'datepicker'} }) }}
                </div>
                <div class="two_fields nrofactura">
                    {{ form_row(form.afipPuntoVenta, { 'attr': {'class' : 'width50', 'maxlength':'5', 'title':'Punto de venta'} }) }}
                    {{ form_widget(form.afipNroComprobante, { 'attr': {'class' : 'mininput','tabindex':'0','maxlength':'20', 'title':'N° de comprobante'} }) }}
                </div>

                <div class="two_fields">
                {{ form_row(form.proveedor, { 'attr': {'class':'select2'} }) }}
                    <div style="font-weight:bold; vertical-align: middle">
                        <span style="padding-right:10px">CUIT:</span><span id="nrocuit"> {% if form.vars.data.proveedor %} {{ form.vars.data.proveedor.cuit }} {% endif %}<span>
                     </div>
                    <div style="color:red">
                        {{ form_errors(form.nroComprobante) }}
                    </div>
                </div>

                <div  class="credito" style="display:none">
                    {{ form_label(form.facturas)  }}
                    {{ form_widget(form.facturas, { 'attr': { 'class' : 'select2', 'tabindex':'0'} }) }}
                </div>
                <div  class="credito" style="margin-top:10px;display:none">
                    {{ form_row(form.modificaStock, { 'attr': {'style' : 'min-width:50px'} }) }}
                </div>
            </div>
            <div style="padding-top: 20px; margin:auto; width: 100%;" id="divItems">
                {{ form_errors(form.detalles) }}
                <table cellpadding="0" cellspacing="0" border="0" class="factura stdtable noaction">
                    <thead>
                        <tr>
                            <th style="width:3%;">#</th>
                            <th>Producto</th>
                            <th style="width:8%;">Alícuota</th>
                            <th style="width:12%;">Cant.</th>
                            <th style="width:10%;" colspan="2">Bulto</th>
                            <th style="width:10%;">Precio Unit.</th>
                            <th style="width:10%;">SubTotal</th>
                            <th style="width:3%;"></th>
                        </tr>
                    </thead>
                    <tbody data-index="{{form.detalles | length }}" data-prototype="{% filter escape %}{% include 'ComprasBundle:NotaDebCred:prototype.html.twig' with {'item':form.detalles.vars.prototype} %}{% endfilter %}">

                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="7" style="text-align:right"> SubTotal</th>
                            <th class="cktotal red" id="Total">{{ form_widget(form.subtotal, { 'attr': {'style':'text-align:right;'} }) }}</th>
                            <th style="text-align:center;">
                                <a href="#" id="linkAdd" tabindex="0"  title="Agregar"><img src="{{asset('assets/images/icons/add.png')}}" /></a>
                            </th>
                        </tr>
                    </tfoot>
                </table>
                <table cellpadding="0" cellspacing="0" border="0" class="stdtable noaction">
                    <thead>
                        <tr>
                            <th>Subtotal Neto </th>
                            <th>Total Bonif. </th>
                            <th>IVA </th>
                            <th>Percep. IVA </th>
                            <th>Percep. DGR </th>
                            <th>Percep. Muni </th>
                            <th>Impuesto Interno </th>
                            <th>No Grav.</th>
                            <th>TOTAL</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="cktotal">{{ form_widget(form.subtotalNeto, { 'attr': {'readonly':'readonly', 'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.totalBonificado, { 'attr': {'style':'text-align:right;','data-old':'0'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.iva, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.percepcionIva, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.percepcionDgr, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.percepcionMunicipal, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.impuestoInterno, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.tmc, { 'attr': {'style':'text-align:right;'} }) }}</td>
                            <td class="cktotal">{{ form_widget(form.total, { 'attr': {'style':'text-align:right;'} }) }}</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div class="widgetbox" id="tableAlicuotas" style="width: 530px;margin:auto;background: aliceblue;padding: 15px;display:block;">
              <div class="title" style="margin:0;"><h5>Detalle de alícuotas <a href="#" id="addAlicuota" title="Agregar otra alícuota" style="display:none">[ + ]</a></h5></div>
              <div class="widgetcontent">
                {{ form_errors(form.alicuotas) }}
                <table class="stdtable alicuotas" cellspacing="0" cellpadding="0" border="0" style="background:white;margin-top: 10px;">
                  <thead>
                      <tr>
                          <th style="width:100px;">Alícuota</th>
                          <th style="width:200px">Importe neto gravado</th>
                          <th style="width:200px;">Impuesto liquidado</th>
                          <th style="width:30px;"></th>
                      </tr>
                  </thead>
                  <tbody data-index="{{form.alicuotas | length }}" data-prototype="{% filter escape %}{% include 'ComprasBundle:Factura:_alicuotas_prototype.html.twig' with {'item':form.alicuotas.vars.prototype} %}{% endfilter %}">
                      {% for alic in form.alicuotas %}
                          <tr class="alicitem" style="height:30px" divdata="item_{{loop.index-1}}">
                              <td class="alicTd"><span></span> {{ form_widget(alic.afipAlicuota, { 'attr': {'style':'display:none'} }) }}</td>
                              <td class="netoTd">{{ form_widget(alic.netoGravado, { 'attr': {'style':'text-align:right;'} }) }}</td>
                              <td class="alicIvaTd">{{ form_widget(alic.liquidado, { 'attr': {'style':'text-align:right;'} }) }}</td>
                              <td class="delAlicTd" style="display:none">
                                <a href="javascript:void(0)" title="Eliminar" class="btn btnaction btn_trash" onclick="delAlicuota(this)"></a>
                              </td>
                          </tr>
                      {% endfor %}
                  </tbody>
                  <thead>
                      <tr>
                          <th></th>
                          <th id="netoTh" class="alignright" style="padding-right: 20px;">0</th>
                          <th id="ivaTh" class="alignright" style="padding-right: 20px;">0</th>
                          <th></th>
                      </tr>
                  </thead>
                </table>
              </div><!--widgetcontent-->
            </div>

            <br clear="all" />
            <div class="actionbutton">
                <button class="guardar" type="submit" >Guardar</button>
                <a class="cancelar" id="cancelar" type="button" href="{{ path('compras_notadebcred')}}">Cancelar</a>
            </div>
        </fieldset>
        <div name="rest" class="hiddenformrest">{{ form_rest(form) }}</div>
 {{ form_end(form) }}
</div>
</div>
{% endblock %}
{% block extra_javascripts %}
<script type="text/javascript" src="{{ asset('assets/js/plugins/chosen.jquery.min.js') }}"></script>
<script type="text/javascript">
jQuery(document).ready(function($) {

    $('.togglemenu').click();

    $("#comprasbundle_notadebcred_afipComprobante").change(function(){
        $.getJSON( "{{path('get_afip_letra_comprobante')}}" ,{id: $(this).val() } , function( data ) {
            $('#comprasbundle_notadebcred_signo').val(data.signo);
            if( data.signo == '-'){
            // mostrar factura y modificaStock
                $('.credito').show();
                $('#comprasbundle_notadebcred_facturas').parent().find('.select2-container').css('width','449px')
            }else{
                // ocultar
                $('.credito').hide();
            }

            $('#comprasbundle_notadebcred_tipoNota').val(data.letra);
            actualizaTotales();
            //$('#comprasbundle_notadebcred_tipoNota').change();
        });
    });
    $("#comprasbundle_notadebcred_afipComprobante").change();

    $(document).on('keypress',function(e){
        var keycode = (e.keyCode ? e.keyCode : e.which);
        if (keycode == 43) {
            e.preventDefault();
            $('#linkAdd').click();
        }
        if(keycode == '13'){
            e.preventDefault();
            if( $('#linkAdd:focus').length > 0){
                $('#linkAdd').click();
            }
            if( $('.linkDel:focus').length > 0 ){
                $('.linkDel:focus').click();
            }
            if( $('.guardar:focus').length > 0 ){
                $('.guardar').click();
            }
            if( $('.cancelar:focus').length > 0 ){
                document.getElementById('cancelar').click();
            }
        }
    });

    $('.datepicker').datepicker({dateFormat: 'dd-mm-yy'});

    $collectionHolder = $('table.factura tbody');
    $collectionHolder.find('.delTd').each(function() {
        addItemFormDeleteLink($(this));
    });
    $collectionHolder.find('.ordTd').each(function(i) {
        $(this).html(i + 1);
    });
    $('#linkAdd').on('click', function(e) {
        e.preventDefault();
        addNewItem();
        e.stopPropagation();
        const lastProduct = $collectionHolder.find('.widgetProducto').last()
        setProductSelect2(lastProduct)
        lastProduct.select2("open")
    });

    $(".chzn-select").chosen({no_results_text: "Sin resultados",search_contains: true});
   $(".chzn-select").change(function(){ changeProducto( $(this) ) });
   $('.cantTd input, .precTd input[type=text]').change(function(){
       if(isNaN( parseFloat(jQuery(this).val()) )) jQuery(this).val(0);  actualizaTotales(); });
    /*$('.cktotal input').change(function(){
        if(isNaN( parseFloat(jQuery(this).val()) ))
            jQuery(this).val(0);
        totales( ( jQuery(this).attr('id')==='comprasbundle_notadebcred_total' ) ? 0 : 1 );
    });*/
    $('.cktotal input').change(function(){
        if(isNaN( parseFloat(jQuery(this).val()) ))
            jQuery(this).val(0);
        totales( ( jQuery(this).attr('id')==='comprasbundle_notadebcred_total' ) ? 0 : 1 );
    });


   /* $('#comprasbundle_notadebcred_tipoNota').on('change',function(){
        actualizaTotales();
    });*/
    $('#comprasbundle_notadebcred_totalBonificado').on('focus',function(){
        $(this).data('old', $(this).val());
    });
    $('#comprasbundle_notadebcred_totalBonificado').on('change',function(){
        var old = $(this).data('old');
        var now = $(this).val();
        var subtot = $('#comprasbundle_notadebcred_subtotal').val() - (now-old);
        $('#comprasbundle_notadebcred_subtotal').val( subtot.toFixed(2) );
        $('#comprasbundle_notadebcred_subtotalNeto').val( subtot.toFixed(2) );
    });
    $('.guardar').click(function() {
        if( !$('#comprasbundle_notadebcred_proveedor').val() ){
            alert('Debe seleccionar un Proveedor');
            return false;
        };
        if( $('tbody tr.item').length > 0 ){
            if (!confirm('Confirma la registración?')) {
               return false;
            }
        }else{  alert('Debe ingresar items a la nota'); return false;}

    });

    $('[name*="proveedor"]').change(function(){
        $('#nrocuit').text('');
        if($(this).val()){
            $.getJSON( "{{path('get_cuit_proveedor')}}" ,{id: $(this).val() } , function( data ) {
                $('#nrocuit').text( data.cuit);
                if(data.valido){
                    color = '#666';
                }else{
                    color = 'orangered';
                    alert('EL CUIT NO ES VÁLIDO!!');
                }
                $('#nrocuit').css('color',color);
            });
            if($('[name*="signo"]').val()=='-'){
                var factura_selector = jQuery('[id^="comprasbundle"][id$="_facturas"]');
                factura_selector.html('<option></option>');
                $.get( "{{ path('select_facturas') }}",{id: $(this).val() } , function( data ) {
                    for (var i = 0, total = data.length; i < total; i++) {
                        txt = data[i].tipoFactura + ' ' + data[i].nroComprobante + ' ($' + data[i].saldo + ')';
                        factura_selector.append('<option value="' + data[i].id + '">' + txt + '</option>');
                    }
                });
            }
        }
    });

$(document).on('change','.ivaTd select',function(){
        actualizaTotales();
    })

    $('[name*="proveedor"]').change();

    $(".bulto input").change(function(){ changeBulto( $(this) );  });
    $(".bulto input").each(function() {
        changeBulto( $(this) );
    });


       $('.nrofactura > div:first-of-type').css('width','22%');
        $('.nrofactura > div:first-of-type > div').css('width','22%');
        $('.nrofactura input').change(function(){
            ptovta = $('#comprasbundle_notadebcred_afipPuntoVenta');
            ptovta.val( ptovta.val().padStart( 5 , '0')) ;
            nro = $('#comprasbundle_notadebcred_afipPuntoVenta').val() + '-' + $('#comprasbundle_notadebcred_afipNroComprobante').val();
            $('#comprasbundle_notadebcred_nroComprobante').val(nro);
        });

    $('.formrows input[type="text"]').css('height','20px');

    selProducto = $(".widgetProducto")
    setProductSelect2(selProducto)
    actualizaTotales();

    $("#comprasbundle_notadebcred_afipComprobante").select2('focus');

    $('body').on('change','.alicIvaTd input, .netoTd input',function() {
      updateAlicuotaTotal();
    });
});
 // funciones personalizas para el formulario
 function addNewItem() {
    var prototype = $collectionHolder.data('prototype');
    var index = $collectionHolder.data('index');
    var newForm = prototype.replace(/items/g, index);
    $collectionHolder.append(newForm);
    $collectionHolder.data('index', index + 1);
    addItemFormDeleteLink($collectionHolder.find('.delTd').last());
    $collectionHolder.find('.ordTd').last().html($collectionHolder.data('index'));

    jQuery(".chzn-select").chosen({no_results_text: "Sin resultados",search_contains: true});
    jQuery('input').on('focus',function(){ jQuery(this).select(); });
    jQuery(".chzn-select").change(function(){ changeProducto( jQuery(this) ); });
    jQuery(".bulto input").last().uniform();
    jQuery(".bulto input").change(function(){ changeBulto( jQuery(this) );  });
    jQuery('.cantTd input, .precTd input[type=text]').change(function(){
        if(isNaN( parseFloat(jQuery(this).val()) )) jQuery(this).val(0);  actualizaTotales(); });
    jQuery('.cktotal').change(function(){
        if(isNaN( parseFloat(jQuery(this).val()) )) jQuery(this).val(0);  totales(); });
}
function addItemFormDeleteLink($itemFormTd) {
    var $removeFormA = jQuery('<a href="javascript:void(0)" title="Quitar" class="linkDel"><span class="minus"></span></a>');
    $itemFormTd.append($removeFormA);
    $removeFormA.on('click', function(e) {
        var res = true;
        if ($itemFormTd.parent().find(".cantTd input").val() > 0)
            res = confirm('Desea eliminar este item?');
        if (res) {
            e.preventDefault();
            $itemFormTd.parent().remove();
            actualizaTotales();
        }
    });
}
{#function changeProducto(producto){
    if(producto.val()){
        jQuery.ajax({
            url: "{{ path("get_data_producto") }}",
            dataType:"json",
            data: 'prod='+ producto.val(),
            success: function(data) {
                trIndex = producto.parent().parent();
                var prodTd = trIndex.find('.prodTd');
                prodTd.data('iva',data.iva);
                trIndex.find('.ivaTd [name*="afipAlicuota"] option:contains('+ data.iva +')').prop('selected', true);
                trIndex.find('.ivaTd .alicuota').text( trIndex.find('.ivaTd [name*="afipAlicuota"] option:selected').text() );
                trIndex.find('.cantTd input').val(1);
                trIndex.find('span.unidmed').html(data.unidmed);
                if(data.bulto){
                    trIndex.find('span.unidmed').hide();
                    trIndex.find('.cantxBulto input').val(data.cantxBulto);
                }else{
                    trIndex.find('span.unidmed').show();
                    trIndex.find('.cantxBulto input').val('');
                }
                trIndex.find('.bulto input').prop('checked', data.bulto);
                jQuery.uniform.update();
                actualizaTotales();
                trIndex.find('.cantTd input').select();
            }
        });
    }
}#}
function changeBulto(item){
    var unidmed = item.parent().parent().parent().siblings('.cantTd').find('.unidmed');
        var cantxbulto = item.parent().parent().parent().siblings('.cantxBulto').find('input');
        if( item.is(':checked') ){
            unidmed.hide();
            cantxbulto.prop('readonly',false);
            cantxbulto.css('color','#666');
            cantxbulto.focus();
        }else{
           unidmed.show();
           cantxbulto.prop('readonly',true);
           cantxbulto.css('color','#fff');
        }
}

function actualizaTotales(){
        let IvaTotal=0;
        var tipoC = jQuery('#comprasbundle_notadebcred_afipComprobante option:selected').text().slice(-2) == ' C'
        // calcular subtotal
        let Total = 0
        jQuery("tr.item").each(function(){
            var item = jQuery(this);
            const cant =  checknumero( item.find('.cantTd input') ) ;
            const prec =  checknumero( item.find('.precTd input[type=text]') )
            const sbtotItm = prec*cant
            item.find('.totalTd').text( sbtotItm.toFixed(2))
            Total += sbtotItm
        })
        jQuery("#comprasbundle_notadebcred_subtotal").val(Total.toFixed(2))
        // calcular iva teniendo en cuenta el dto
        const totbon = checknumero( jQuery('#comprasbundle_notadebcred_totalBonificado') );
        const porcDto = (totbon === 0 && Total === 0) ? 0 : (totbon * 100) / Total;

        const arrayAlic = {}
        jQuery("tr.item").each(function(){
            var item = jQuery(this);
            var cant =  checknumero( item.find('.cantTd input') ) ;
            var prec =  checknumero( item.find('.precTd input[type=text]') ) ;
            const precTotal = cant*prec
            const precDto = precTotal - (precTotal * (porcDto/100))
            let ivaTxt = item.find('.ivaTd [name*="afipAlicuota"] option:selected').text();
            let iva = item.find('.ivaTd [name*="afipAlicuota"] option:selected').text();
            iva = parseFloat(iva.replace('%', '') /100);
            ivaItem = 0

            if( !tipoC){
                IvaTotal += (precDto * iva);
                ivaItem = (precDto * iva);
            }
            if (arrayAlic[ivaTxt]) {
              arrayAlic[ivaTxt].iva += ivaItem;
              arrayAlic[ivaTxt].neto += precDto;
            } else {
              arrayAlic[ivaTxt] = { iva: ivaItem, neto: precDto };
            }
        });
        setTablaAlicuotas(arrayAlic)
        jQuery('#comprasbundle_notadebcred_iva').val(  IvaTotal.toFixed(2)  );
        totales(1);
        $collectionHolder.find('.ordTd').each(function(index) {
            jQuery(this).html(index+1);
        });
    }
function totales(suma){
    var neto = checknumero(jQuery('#comprasbundle_notadebcred_subtotal'));
    jQuery('#comprasbundle_notadebcred_subtotalNeto').val(  neto.toFixed(2)  );
  //  var subtotalneto = checknumero( jQuery('#comprasbundle_factura_subtotalNeto') );
    var impuesto = checknumero( jQuery('#comprasbundle_notadebcred_impuestoInterno') );
    var iva = checknumero( jQuery('#comprasbundle_notadebcred_iva') );
    var perciva = checknumero( jQuery('#comprasbundle_notadebcred_percepcionIva') );
    var percdgr = checknumero( jQuery('#comprasbundle_notadebcred_percepcionDgr') );
    var percmun = checknumero( jQuery('#comprasbundle_notadebcred_percepcionMunicipal') );
    var totbon = checknumero( jQuery('#comprasbundle_notadebcred_totalBonificado') );
    var tmc = checknumero( jQuery('#comprasbundle_notadebcred_tmc') );
    if(suma){
        var subtot = neto - totbon;
        var totales = subtot  +  impuesto + iva + perciva + percdgr + percmun +  tmc ;
         jQuery('#comprasbundle_notadebcred_total').val( totales.toFixed(2) );
     }else{
         checknumero( jQuery('#comprasbundle_notadebcred_total') );
     }
    checkDiferencias()
}

function setProductSelect2(selProducto) {
    let urlselect = selProducto.data("urlselect")
    selProducto
        .select2({
            ajax: {
                url: urlselect,
		type: "post",
		dataType: "json",
		delay: 300,
		cache: false,
		data: (params) => { return { searchTerm: params.term } },
		processResults: (response) => {
                    results = response.map((x) => {
                        return {
                            id: x.id,
                            text: x.text,
                            alicuota: x.alicuota,
                            bulto: x.bulto,
                            comodin: x.comodin,
                            cantxBulto: x.cantxBulto,
                            unidmed: x.unidmed
                        }
                    })
                    return { results }
		},
            },
            templateResult: (data) => {
                return data.text
            },
            templateSelection: function (data) {
                jQuery(data.element).attr('data-bulto', data.bulto);
                jQuery(data.element).attr('data-alicuota', data.alicuota);
                jQuery(data.element).attr('data-comodin', data.comodin);
                jQuery(data.element).attr('data-unidmed', data.unidmed);
                jQuery(data.element).attr('data-cantxBulto', data.cantxBulto);
                return data.text;
              },
            minimumInputLength: 3,
            width: "style",
            cache: false,
	})
        .on("select2:select",function(e){
            const obj = e.target
            const tr = jQuery(obj).closest("tr")
            const data = e.params.data
            tr.find('.ivaTd [name*="afipAlicuota"]').val(data.alicuota);
            tr.find('.cantTd input').val(1);
            tr.find('span.unidmed').html(data.unidmed);
            if(data.bulto){
                tr.find('span.unidmed').hide();
                tr.find('.cantxBulto input').val(data.cantxBulto);
            }else{
                tr.find('span.unidmed').show();
                tr.find('.cantxBulto input').val('');
            }
            tr.find('.bulto input').prop('checked', data.bulto);
            jQuery.uniform.update();
            actualizaTotales();
            tr.find('.cantTd input').select();
        })
}


/// Alicuotas
function setTablaAlicuotas(arr){
  alicTr = jQuery('table.alicuotas tbody').find('tr')
  ivaTotal = netoTotal = 0
  for( iva in arr){
    let existe = false
    alicTr.each(function() {
        var select = jQuery(this).find('td.alicTd select');
        if (select.find('option:selected').text().trim() === iva) {
            existe = true;
            updateAlicuotaData(jQuery(this), arr[iva])
            return false;  // Terminar el bucle cuando se encuentra el valor
        }
    });
    if(!existe){
      newTr = addNewAlicuota(iva)
      updateAlicuotaData(newTr, arr[iva])
    }
    ivaTotal += arr[iva].iva
    netoTotal += arr[iva].neto
  }
  jQuery('#ivaTh').html(ivaTotal.toFixed(2))
  jQuery('#netoTh').html(netoTotal.toFixed(2))
}
function updateAlicuotaData(tr, arr){
  var alicIvaInput = tr.find('td.alicIvaTd input');
  alicIvaInput.val( parseFloat(arr.iva).toFixed(2))
  var netoInput = tr.find('td.netoTd input');
  netoInput.val( parseFloat(arr.neto).toFixed(2))
}
function addNewAlicuota(iva){
    $holder = jQuery('table.alicuotas tbody');
    var prototype = $holder.data('prototype');
    var index = $holder.data('index');
    var newForm = prototype.replace(/items/g, index);
    $holder.append(newForm);
    $holder.data('index', index + 1);
    alicuota = $holder.find('.alicTd select').last();
    span = $holder.find('.alicTd span').last();
    alicuota.children('option').each(function() {
        if (jQuery(this).text().trim() === iva) {
            span.text(iva)
            jQuery(this).prop('selected', true);
        }
    });
    $holder.find('td.alicIvaTd input').last().val(0)
    $holder.find('td.netoTd input').last().val(0)
    return $holder.find('tr').last()
}
function delAlicuota(obj){
  tr = jQuery(obj).closest("tr")
  if( confirm('Desea eliminar este item?')  ){
    tr.remove()
    // jQuery('.stkmin').change()
  }else return false
}
function checkDiferencias(){
  ivaTh = jQuery('#ivaTh')
  netoTh = jQuery('#netoTh')
  ivaTh.attr('style','background:#f7f7f7')
  netoTh.attr('style','background:#f7f7f7')
  if(ivaTh.text() != jQuery('#comprasbundle_notadebcred_iva').val()){
    ivaTh.attr('style','background:coral')
  }
  if(netoTh.text() != jQuery('#comprasbundle_notadebcred_subtotal').val()){
    netoTh.attr('style','background:coral')
  }
}
function updateAlicuotaTotal(){
  alicTr = jQuery('table.alicuotas tbody').find('tr')
  iva = neto = 0
  alicTr.each(function() {
    iva += parseFloat(jQuery(this).find('.alicIvaTd input').val())
    neto += parseFloat(jQuery(this).find('.netoTd input').val())
  });
  jQuery('#ivaTh').html(iva.toFixed(2))
  jQuery('#netoTh').html(neto.toFixed(2))
  checkDiferencias()
}
</script>{% endblock %}